/**
 * generated by Xtext 2.12.0
 */
package org.eclipse.emf.parsley.dsl.model.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.parsley.dsl.model.FeatureCaptionProvider;
import org.eclipse.emf.parsley.dsl.model.FeatureTexts;
import org.eclipse.emf.parsley.dsl.model.ModelPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Feature Caption Provider</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.emf.parsley.dsl.model.impl.FeatureCaptionProviderImpl#getFeatureTexts <em>Feature Texts</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FeatureCaptionProviderImpl extends WithFieldsImpl implements FeatureCaptionProvider
{
  /**
   * The cached value of the '{@link #getFeatureTexts() <em>Feature Texts</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeatureTexts()
   * @generated
   * @ordered
   */
  protected FeatureTexts featureTexts;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FeatureCaptionProviderImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelPackage.Literals.FEATURE_CAPTION_PROVIDER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FeatureTexts getFeatureTexts()
  {
    return featureTexts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFeatureTexts(FeatureTexts newFeatureTexts, NotificationChain msgs)
  {
    FeatureTexts oldFeatureTexts = featureTexts;
    featureTexts = newFeatureTexts;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelPackage.FEATURE_CAPTION_PROVIDER__FEATURE_TEXTS, oldFeatureTexts, newFeatureTexts);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFeatureTexts(FeatureTexts newFeatureTexts)
  {
    if (newFeatureTexts != featureTexts)
    {
      NotificationChain msgs = null;
      if (featureTexts != null)
        msgs = ((InternalEObject)featureTexts).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelPackage.FEATURE_CAPTION_PROVIDER__FEATURE_TEXTS, null, msgs);
      if (newFeatureTexts != null)
        msgs = ((InternalEObject)newFeatureTexts).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelPackage.FEATURE_CAPTION_PROVIDER__FEATURE_TEXTS, null, msgs);
      msgs = basicSetFeatureTexts(newFeatureTexts, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelPackage.FEATURE_CAPTION_PROVIDER__FEATURE_TEXTS, newFeatureTexts, newFeatureTexts));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ModelPackage.FEATURE_CAPTION_PROVIDER__FEATURE_TEXTS:
        return basicSetFeatureTexts(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelPackage.FEATURE_CAPTION_PROVIDER__FEATURE_TEXTS:
        return getFeatureTexts();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelPackage.FEATURE_CAPTION_PROVIDER__FEATURE_TEXTS:
        setFeatureTexts((FeatureTexts)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelPackage.FEATURE_CAPTION_PROVIDER__FEATURE_TEXTS:
        setFeatureTexts((FeatureTexts)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelPackage.FEATURE_CAPTION_PROVIDER__FEATURE_TEXTS:
        return featureTexts != null;
    }
    return super.eIsSet(featureID);
  }

} //FeatureCaptionProviderImpl
