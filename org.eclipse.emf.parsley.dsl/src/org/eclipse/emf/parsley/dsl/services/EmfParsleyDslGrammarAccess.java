/*
 * generated by Xtext 2.12.0
 */
package org.eclipse.emf.parsley.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.xbase.annotations.services.XbaseWithAnnotationsGrammarAccess;
import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class EmfParsleyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportSectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportSectionXImportSectionParserRuleCall_0_0 = (RuleCall)cImportSectionAssignment_0.eContents().get(0);
		private final Assignment cModuleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cModuleModuleParserRuleCall_1_0 = (RuleCall)cModuleAssignment_1.eContents().get(0);
		
		//Model:
		//	importSection=XImportSection?
		//	module=Module;
		@Override public ParserRule getRule() { return rule; }
		
		//importSection=XImportSection? module=Module
		public Group getGroup() { return cGroup; }
		
		//importSection=XImportSection?
		public Assignment getImportSectionAssignment_0() { return cImportSectionAssignment_0; }
		
		//XImportSection
		public RuleCall getImportSectionXImportSectionParserRuleCall_0_0() { return cImportSectionXImportSectionParserRuleCall_0_0; }
		
		//module=Module
		public Assignment getModuleAssignment_1() { return cModuleAssignment_1; }
		
		//Module
		public RuleCall getModuleModuleParserRuleCall_1_0() { return cModuleModuleParserRuleCall_1_0; }
	}
	public class ModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Module");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Assignment cBindingsSpecificationAssignment_4_0 = (Assignment)cUnorderedGroup_4.eContents().get(0);
		private final RuleCall cBindingsSpecificationBindingsSpecificationParserRuleCall_4_0_0 = (RuleCall)cBindingsSpecificationAssignment_4_0.eContents().get(0);
		private final Assignment cLabelProviderAssignment_4_1 = (Assignment)cUnorderedGroup_4.eContents().get(1);
		private final RuleCall cLabelProviderLabelProviderParserRuleCall_4_1_0 = (RuleCall)cLabelProviderAssignment_4_1.eContents().get(0);
		private final Assignment cTableLabelProviderAssignment_4_2 = (Assignment)cUnorderedGroup_4.eContents().get(2);
		private final RuleCall cTableLabelProviderTableLabelProviderParserRuleCall_4_2_0 = (RuleCall)cTableLabelProviderAssignment_4_2.eContents().get(0);
		private final Assignment cFeatureCaptionProviderAssignment_4_3 = (Assignment)cUnorderedGroup_4.eContents().get(3);
		private final RuleCall cFeatureCaptionProviderFeatureCaptionProviderParserRuleCall_4_3_0 = (RuleCall)cFeatureCaptionProviderAssignment_4_3.eContents().get(0);
		private final Assignment cFormFeatureCaptionProviderAssignment_4_4 = (Assignment)cUnorderedGroup_4.eContents().get(4);
		private final RuleCall cFormFeatureCaptionProviderFormFeatureCaptionProviderParserRuleCall_4_4_0 = (RuleCall)cFormFeatureCaptionProviderAssignment_4_4.eContents().get(0);
		private final Assignment cDialogFeatureCaptionProviderAssignment_4_5 = (Assignment)cUnorderedGroup_4.eContents().get(5);
		private final RuleCall cDialogFeatureCaptionProviderDialogFeatureCaptionProviderParserRuleCall_4_5_0 = (RuleCall)cDialogFeatureCaptionProviderAssignment_4_5.eContents().get(0);
		private final Assignment cFeaturesProviderAssignment_4_6 = (Assignment)cUnorderedGroup_4.eContents().get(6);
		private final RuleCall cFeaturesProviderFeaturesProviderParserRuleCall_4_6_0 = (RuleCall)cFeaturesProviderAssignment_4_6.eContents().get(0);
		private final Assignment cTableFeaturesProviderAssignment_4_7 = (Assignment)cUnorderedGroup_4.eContents().get(7);
		private final RuleCall cTableFeaturesProviderTableFeaturesProviderParserRuleCall_4_7_0 = (RuleCall)cTableFeaturesProviderAssignment_4_7.eContents().get(0);
		private final Assignment cFormControlFactoryAssignment_4_8 = (Assignment)cUnorderedGroup_4.eContents().get(8);
		private final RuleCall cFormControlFactoryFormControlFactoryParserRuleCall_4_8_0 = (RuleCall)cFormControlFactoryAssignment_4_8.eContents().get(0);
		private final Assignment cDialogControlFactoryAssignment_4_9 = (Assignment)cUnorderedGroup_4.eContents().get(9);
		private final RuleCall cDialogControlFactoryDialogControlFactoryParserRuleCall_4_9_0 = (RuleCall)cDialogControlFactoryAssignment_4_9.eContents().get(0);
		private final Assignment cProposalCreatorAssignment_4_10 = (Assignment)cUnorderedGroup_4.eContents().get(10);
		private final RuleCall cProposalCreatorProposalCreatorParserRuleCall_4_10_0 = (RuleCall)cProposalCreatorAssignment_4_10.eContents().get(0);
		private final Assignment cMenuBuilderAssignment_4_11 = (Assignment)cUnorderedGroup_4.eContents().get(11);
		private final RuleCall cMenuBuilderMenuBuilderParserRuleCall_4_11_0 = (RuleCall)cMenuBuilderAssignment_4_11.eContents().get(0);
		private final Assignment cConfiguratorAssignment_4_12 = (Assignment)cUnorderedGroup_4.eContents().get(12);
		private final RuleCall cConfiguratorConfiguratorParserRuleCall_4_12_0 = (RuleCall)cConfiguratorAssignment_4_12.eContents().get(0);
		private final Assignment cViewerContentProviderAssignment_4_13 = (Assignment)cUnorderedGroup_4.eContents().get(13);
		private final RuleCall cViewerContentProviderViewerContentProviderParserRuleCall_4_13_0 = (RuleCall)cViewerContentProviderAssignment_4_13.eContents().get(0);
		private final Assignment cTableViewerContentProviderAssignment_4_14 = (Assignment)cUnorderedGroup_4.eContents().get(14);
		private final RuleCall cTableViewerContentProviderTableViewerContentProviderParserRuleCall_4_14_0 = (RuleCall)cTableViewerContentProviderAssignment_4_14.eContents().get(0);
		private final Assignment cPartsSpecificationsAssignment_4_15 = (Assignment)cUnorderedGroup_4.eContents().get(15);
		private final RuleCall cPartsSpecificationsPartsSpecificationsParserRuleCall_4_15_0 = (RuleCall)cPartsSpecificationsAssignment_4_15.eContents().get(0);
		private final Assignment cResourceManagerAssignment_4_16 = (Assignment)cUnorderedGroup_4.eContents().get(16);
		private final RuleCall cResourceManagerResourceManagerParserRuleCall_4_16_0 = (RuleCall)cResourceManagerAssignment_4_16.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//// if you add another element, please make sure that you update inheritance
		//// relations (see, e.g., WithExtendsClause rule) and also the
		//// label provider
		//Module:
		//	'module' name=QualifiedName extendsClause=ExtendsClause? '{' (bindingsSpecification=BindingsSpecification?
		//	& labelProvider=LabelProvider?
		//	& tableLabelProvider=TableLabelProvider?
		//	& featureCaptionProvider=FeatureCaptionProvider?
		//	& formFeatureCaptionProvider=FormFeatureCaptionProvider?
		//	& dialogFeatureCaptionProvider=DialogFeatureCaptionProvider?
		//	& featuresProvider=FeaturesProvider?
		//	& tableFeaturesProvider=TableFeaturesProvider?
		//	& formControlFactory=FormControlFactory?
		//	& dialogControlFactory=DialogControlFactory?
		//	& proposalCreator=ProposalCreator?
		//	& menuBuilder=MenuBuilder?
		//	& configurator=Configurator?
		//	& viewerContentProvider=ViewerContentProvider?
		//	& tableViewerContentProvider=TableViewerContentProvider?
		//	& partsSpecifications=PartsSpecifications?
		//	& resourceManager=ResourceManager?)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'module' name=QualifiedName extendsClause=ExtendsClause? '{' (bindingsSpecification=BindingsSpecification? &
		//labelProvider=LabelProvider? & tableLabelProvider=TableLabelProvider? & featureCaptionProvider=FeatureCaptionProvider?
		//& formFeatureCaptionProvider=FormFeatureCaptionProvider? & dialogFeatureCaptionProvider=DialogFeatureCaptionProvider? &
		//featuresProvider=FeaturesProvider? & tableFeaturesProvider=TableFeaturesProvider? &
		//formControlFactory=FormControlFactory? & dialogControlFactory=DialogControlFactory? & proposalCreator=ProposalCreator?
		//& menuBuilder=MenuBuilder? & configurator=Configurator? & viewerContentProvider=ViewerContentProvider? &
		//tableViewerContentProvider=TableViewerContentProvider? & partsSpecifications=PartsSpecifications? &
		//resourceManager=ResourceManager?) '}'
		public Group getGroup() { return cGroup; }
		
		//'module'
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//bindingsSpecification=BindingsSpecification? & labelProvider=LabelProvider? & tableLabelProvider=TableLabelProvider? &
		//featureCaptionProvider=FeatureCaptionProvider? & formFeatureCaptionProvider=FormFeatureCaptionProvider? &
		//dialogFeatureCaptionProvider=DialogFeatureCaptionProvider? & featuresProvider=FeaturesProvider? &
		//tableFeaturesProvider=TableFeaturesProvider? & formControlFactory=FormControlFactory? &
		//dialogControlFactory=DialogControlFactory? & proposalCreator=ProposalCreator? & menuBuilder=MenuBuilder? &
		//configurator=Configurator? & viewerContentProvider=ViewerContentProvider? &
		//tableViewerContentProvider=TableViewerContentProvider? & partsSpecifications=PartsSpecifications? &
		//resourceManager=ResourceManager?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//bindingsSpecification=BindingsSpecification?
		public Assignment getBindingsSpecificationAssignment_4_0() { return cBindingsSpecificationAssignment_4_0; }
		
		//BindingsSpecification
		public RuleCall getBindingsSpecificationBindingsSpecificationParserRuleCall_4_0_0() { return cBindingsSpecificationBindingsSpecificationParserRuleCall_4_0_0; }
		
		//labelProvider=LabelProvider?
		public Assignment getLabelProviderAssignment_4_1() { return cLabelProviderAssignment_4_1; }
		
		//LabelProvider
		public RuleCall getLabelProviderLabelProviderParserRuleCall_4_1_0() { return cLabelProviderLabelProviderParserRuleCall_4_1_0; }
		
		//tableLabelProvider=TableLabelProvider?
		public Assignment getTableLabelProviderAssignment_4_2() { return cTableLabelProviderAssignment_4_2; }
		
		//TableLabelProvider
		public RuleCall getTableLabelProviderTableLabelProviderParserRuleCall_4_2_0() { return cTableLabelProviderTableLabelProviderParserRuleCall_4_2_0; }
		
		//featureCaptionProvider=FeatureCaptionProvider?
		public Assignment getFeatureCaptionProviderAssignment_4_3() { return cFeatureCaptionProviderAssignment_4_3; }
		
		//FeatureCaptionProvider
		public RuleCall getFeatureCaptionProviderFeatureCaptionProviderParserRuleCall_4_3_0() { return cFeatureCaptionProviderFeatureCaptionProviderParserRuleCall_4_3_0; }
		
		//formFeatureCaptionProvider=FormFeatureCaptionProvider?
		public Assignment getFormFeatureCaptionProviderAssignment_4_4() { return cFormFeatureCaptionProviderAssignment_4_4; }
		
		//FormFeatureCaptionProvider
		public RuleCall getFormFeatureCaptionProviderFormFeatureCaptionProviderParserRuleCall_4_4_0() { return cFormFeatureCaptionProviderFormFeatureCaptionProviderParserRuleCall_4_4_0; }
		
		//dialogFeatureCaptionProvider=DialogFeatureCaptionProvider?
		public Assignment getDialogFeatureCaptionProviderAssignment_4_5() { return cDialogFeatureCaptionProviderAssignment_4_5; }
		
		//DialogFeatureCaptionProvider
		public RuleCall getDialogFeatureCaptionProviderDialogFeatureCaptionProviderParserRuleCall_4_5_0() { return cDialogFeatureCaptionProviderDialogFeatureCaptionProviderParserRuleCall_4_5_0; }
		
		//featuresProvider=FeaturesProvider?
		public Assignment getFeaturesProviderAssignment_4_6() { return cFeaturesProviderAssignment_4_6; }
		
		//FeaturesProvider
		public RuleCall getFeaturesProviderFeaturesProviderParserRuleCall_4_6_0() { return cFeaturesProviderFeaturesProviderParserRuleCall_4_6_0; }
		
		//tableFeaturesProvider=TableFeaturesProvider?
		public Assignment getTableFeaturesProviderAssignment_4_7() { return cTableFeaturesProviderAssignment_4_7; }
		
		//TableFeaturesProvider
		public RuleCall getTableFeaturesProviderTableFeaturesProviderParserRuleCall_4_7_0() { return cTableFeaturesProviderTableFeaturesProviderParserRuleCall_4_7_0; }
		
		//formControlFactory=FormControlFactory?
		public Assignment getFormControlFactoryAssignment_4_8() { return cFormControlFactoryAssignment_4_8; }
		
		//FormControlFactory
		public RuleCall getFormControlFactoryFormControlFactoryParserRuleCall_4_8_0() { return cFormControlFactoryFormControlFactoryParserRuleCall_4_8_0; }
		
		//dialogControlFactory=DialogControlFactory?
		public Assignment getDialogControlFactoryAssignment_4_9() { return cDialogControlFactoryAssignment_4_9; }
		
		//DialogControlFactory
		public RuleCall getDialogControlFactoryDialogControlFactoryParserRuleCall_4_9_0() { return cDialogControlFactoryDialogControlFactoryParserRuleCall_4_9_0; }
		
		//proposalCreator=ProposalCreator?
		public Assignment getProposalCreatorAssignment_4_10() { return cProposalCreatorAssignment_4_10; }
		
		//ProposalCreator
		public RuleCall getProposalCreatorProposalCreatorParserRuleCall_4_10_0() { return cProposalCreatorProposalCreatorParserRuleCall_4_10_0; }
		
		//menuBuilder=MenuBuilder?
		public Assignment getMenuBuilderAssignment_4_11() { return cMenuBuilderAssignment_4_11; }
		
		//MenuBuilder
		public RuleCall getMenuBuilderMenuBuilderParserRuleCall_4_11_0() { return cMenuBuilderMenuBuilderParserRuleCall_4_11_0; }
		
		//configurator=Configurator?
		public Assignment getConfiguratorAssignment_4_12() { return cConfiguratorAssignment_4_12; }
		
		//Configurator
		public RuleCall getConfiguratorConfiguratorParserRuleCall_4_12_0() { return cConfiguratorConfiguratorParserRuleCall_4_12_0; }
		
		//viewerContentProvider=ViewerContentProvider?
		public Assignment getViewerContentProviderAssignment_4_13() { return cViewerContentProviderAssignment_4_13; }
		
		//ViewerContentProvider
		public RuleCall getViewerContentProviderViewerContentProviderParserRuleCall_4_13_0() { return cViewerContentProviderViewerContentProviderParserRuleCall_4_13_0; }
		
		//tableViewerContentProvider=TableViewerContentProvider?
		public Assignment getTableViewerContentProviderAssignment_4_14() { return cTableViewerContentProviderAssignment_4_14; }
		
		//TableViewerContentProvider
		public RuleCall getTableViewerContentProviderTableViewerContentProviderParserRuleCall_4_14_0() { return cTableViewerContentProviderTableViewerContentProviderParserRuleCall_4_14_0; }
		
		//partsSpecifications=PartsSpecifications?
		public Assignment getPartsSpecificationsAssignment_4_15() { return cPartsSpecificationsAssignment_4_15; }
		
		//PartsSpecifications
		public RuleCall getPartsSpecificationsPartsSpecificationsParserRuleCall_4_15_0() { return cPartsSpecificationsPartsSpecificationsParserRuleCall_4_15_0; }
		
		//resourceManager=ResourceManager?
		public Assignment getResourceManagerAssignment_4_16() { return cResourceManagerAssignment_4_16; }
		
		//ResourceManager
		public RuleCall getResourceManagerResourceManagerParserRuleCall_4_16_0() { return cResourceManagerResourceManagerParserRuleCall_4_16_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ExtendsClauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ExtendsClause");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExtendsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSuperTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSuperTypeJvmTypeReferenceParserRuleCall_1_0 = (RuleCall)cSuperTypeAssignment_1.eContents().get(0);
		
		//ExtendsClause:
		//	'extends' superType=JvmTypeReference;
		@Override public ParserRule getRule() { return rule; }
		
		//'extends' superType=JvmTypeReference
		public Group getGroup() { return cGroup; }
		
		//'extends'
		public Keyword getExtendsKeyword_0() { return cExtendsKeyword_0; }
		
		//superType=JvmTypeReference
		public Assignment getSuperTypeAssignment_1() { return cSuperTypeAssignment_1; }
		
		//JvmTypeReference
		public RuleCall getSuperTypeJvmTypeReferenceParserRuleCall_1_0() { return cSuperTypeJvmTypeReferenceParserRuleCall_1_0; }
	}
	public class BindingsSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.BindingsSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBindingsSpecificationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBindingsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBindingsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBindingsBindingParserRuleCall_3_0 = (RuleCall)cBindingsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BindingsSpecification:
		//	{BindingsSpecification} 'bindings' '{'
		//	bindings+=Binding*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{BindingsSpecification} 'bindings' '{' bindings+=Binding* '}'
		public Group getGroup() { return cGroup; }
		
		//{BindingsSpecification}
		public Action getBindingsSpecificationAction_0() { return cBindingsSpecificationAction_0; }
		
		//'bindings'
		public Keyword getBindingsKeyword_1() { return cBindingsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//bindings+=Binding*
		public Assignment getBindingsAssignment_3() { return cBindingsAssignment_3; }
		
		//Binding
		public RuleCall getBindingsBindingParserRuleCall_3_0() { return cBindingsBindingParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class BindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Binding");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cTypeBindingAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cTypeKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cTypeToBindAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cTypeToBindJvmTypeReferenceParserRuleCall_0_2_0 = (RuleCall)cTypeToBindAssignment_0_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cToAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cToXExpressionParserRuleCall_0_4_0 = (RuleCall)cToAssignment_0_4.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cProviderBindingAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cProvideKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cTypeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_1_2_0 = (RuleCall)cTypeAssignment_1_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cToAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cToXExpressionParserRuleCall_1_4_0 = (RuleCall)cToAssignment_1_4.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cValueBindingAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cValueKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cTypeDeclAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTypeDeclJvmTypeReferenceParserRuleCall_2_2_0 = (RuleCall)cTypeDeclAssignment_2_2.eContents().get(0);
		private final Assignment cIdAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cIdValidIDParserRuleCall_2_3_0 = (RuleCall)cIdAssignment_2_3.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Assignment cToAssignment_2_5 = (Assignment)cGroup_2.eContents().get(5);
		private final RuleCall cToXExpressionParserRuleCall_2_5_0 = (RuleCall)cToAssignment_2_5.eContents().get(0);
		
		//Binding:
		//	{TypeBinding} 'type' typeToBind=JvmTypeReference '->' to=XExpression | {ProviderBinding} 'provide'
		//	type=JvmTypeReference '->' to=XExpression | {ValueBinding} 'value' typeDecl=JvmTypeReference id=ValidID '->'
		//	to=XExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//{TypeBinding} 'type' typeToBind=JvmTypeReference '->' to=XExpression | {ProviderBinding} 'provide' type=JvmTypeReference
		//'->' to=XExpression | {ValueBinding} 'value' typeDecl=JvmTypeReference id=ValidID '->' to=XExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{TypeBinding} 'type' typeToBind=JvmTypeReference '->' to=XExpression
		public Group getGroup_0() { return cGroup_0; }
		
		//{TypeBinding}
		public Action getTypeBindingAction_0_0() { return cTypeBindingAction_0_0; }
		
		//'type'
		public Keyword getTypeKeyword_0_1() { return cTypeKeyword_0_1; }
		
		//typeToBind=JvmTypeReference
		public Assignment getTypeToBindAssignment_0_2() { return cTypeToBindAssignment_0_2; }
		
		//JvmTypeReference
		public RuleCall getTypeToBindJvmTypeReferenceParserRuleCall_0_2_0() { return cTypeToBindJvmTypeReferenceParserRuleCall_0_2_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_0_3() { return cHyphenMinusGreaterThanSignKeyword_0_3; }
		
		//to=XExpression
		public Assignment getToAssignment_0_4() { return cToAssignment_0_4; }
		
		//XExpression
		public RuleCall getToXExpressionParserRuleCall_0_4_0() { return cToXExpressionParserRuleCall_0_4_0; }
		
		//{ProviderBinding} 'provide' type=JvmTypeReference '->' to=XExpression
		public Group getGroup_1() { return cGroup_1; }
		
		//{ProviderBinding}
		public Action getProviderBindingAction_1_0() { return cProviderBindingAction_1_0; }
		
		//'provide'
		public Keyword getProvideKeyword_1_1() { return cProvideKeyword_1_1; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_1_2() { return cTypeAssignment_1_2; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_1_2_0() { return cTypeJvmTypeReferenceParserRuleCall_1_2_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_3() { return cHyphenMinusGreaterThanSignKeyword_1_3; }
		
		//to=XExpression
		public Assignment getToAssignment_1_4() { return cToAssignment_1_4; }
		
		//XExpression
		public RuleCall getToXExpressionParserRuleCall_1_4_0() { return cToXExpressionParserRuleCall_1_4_0; }
		
		//{ValueBinding} 'value' typeDecl=JvmTypeReference id=ValidID '->' to=XExpression
		public Group getGroup_2() { return cGroup_2; }
		
		//{ValueBinding}
		public Action getValueBindingAction_2_0() { return cValueBindingAction_2_0; }
		
		//'value'
		public Keyword getValueKeyword_2_1() { return cValueKeyword_2_1; }
		
		//typeDecl=JvmTypeReference
		public Assignment getTypeDeclAssignment_2_2() { return cTypeDeclAssignment_2_2; }
		
		//JvmTypeReference
		public RuleCall getTypeDeclJvmTypeReferenceParserRuleCall_2_2_0() { return cTypeDeclJvmTypeReferenceParserRuleCall_2_2_0; }
		
		//id=ValidID
		public Assignment getIdAssignment_2_3() { return cIdAssignment_2_3; }
		
		//ValidID
		public RuleCall getIdValidIDParserRuleCall_2_3_0() { return cIdValidIDParserRuleCall_2_3_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_4() { return cHyphenMinusGreaterThanSignKeyword_2_4; }
		
		//to=XExpression
		public Assignment getToAssignment_2_5() { return cToAssignment_2_5; }
		
		//XExpression
		public RuleCall getToXExpressionParserRuleCall_2_5_0() { return cToXExpressionParserRuleCall_2_5_0; }
	}
	public class LabelProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.LabelProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLabelProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLabelProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Assignment cTextsAssignment_5_0 = (Assignment)cUnorderedGroup_5.eContents().get(0);
		private final RuleCall cTextsTextsParserRuleCall_5_0_0 = (RuleCall)cTextsAssignment_5_0.eContents().get(0);
		private final Assignment cImagesAssignment_5_1 = (Assignment)cUnorderedGroup_5.eContents().get(1);
		private final RuleCall cImagesImagesParserRuleCall_5_1_0 = (RuleCall)cImagesAssignment_5_1.eContents().get(0);
		private final Assignment cFontsAssignment_5_2 = (Assignment)cUnorderedGroup_5.eContents().get(2);
		private final RuleCall cFontsFontsParserRuleCall_5_2_0 = (RuleCall)cFontsAssignment_5_2.eContents().get(0);
		private final Assignment cForegroundsAssignment_5_3 = (Assignment)cUnorderedGroup_5.eContents().get(3);
		private final RuleCall cForegroundsForegroundsParserRuleCall_5_3_0 = (RuleCall)cForegroundsAssignment_5_3.eContents().get(0);
		private final Assignment cBackgroundsAssignment_5_4 = (Assignment)cUnorderedGroup_5.eContents().get(4);
		private final RuleCall cBackgroundsBackgroundsParserRuleCall_5_4_0 = (RuleCall)cBackgroundsAssignment_5_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//LabelProvider:
		//	{LabelProvider} 'labelProvider' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification* (texts=Texts?
		//	& images=Images?
		//	& fonts=Fonts?
		//	& foregrounds=Foregrounds?
		//	& backgrounds=Backgrounds?)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{LabelProvider} 'labelProvider' extendsClause=ExtendsClause? '{' fields+=FieldSpecification* (texts=Texts? &
		//images=Images? & fonts=Fonts? & foregrounds=Foregrounds? & backgrounds=Backgrounds?) '}'
		public Group getGroup() { return cGroup; }
		
		//{LabelProvider}
		public Action getLabelProviderAction_0() { return cLabelProviderAction_0; }
		
		//'labelProvider'
		public Keyword getLabelProviderKeyword_1() { return cLabelProviderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//texts=Texts? & images=Images? & fonts=Fonts? & foregrounds=Foregrounds? & backgrounds=Backgrounds?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//texts=Texts?
		public Assignment getTextsAssignment_5_0() { return cTextsAssignment_5_0; }
		
		//Texts
		public RuleCall getTextsTextsParserRuleCall_5_0_0() { return cTextsTextsParserRuleCall_5_0_0; }
		
		//images=Images?
		public Assignment getImagesAssignment_5_1() { return cImagesAssignment_5_1; }
		
		//Images
		public RuleCall getImagesImagesParserRuleCall_5_1_0() { return cImagesImagesParserRuleCall_5_1_0; }
		
		//fonts=Fonts?
		public Assignment getFontsAssignment_5_2() { return cFontsAssignment_5_2; }
		
		//Fonts
		public RuleCall getFontsFontsParserRuleCall_5_2_0() { return cFontsFontsParserRuleCall_5_2_0; }
		
		//foregrounds=Foregrounds?
		public Assignment getForegroundsAssignment_5_3() { return cForegroundsAssignment_5_3; }
		
		//Foregrounds
		public RuleCall getForegroundsForegroundsParserRuleCall_5_3_0() { return cForegroundsForegroundsParserRuleCall_5_3_0; }
		
		//backgrounds=Backgrounds?
		public Assignment getBackgroundsAssignment_5_4() { return cBackgroundsAssignment_5_4; }
		
		//Backgrounds
		public RuleCall getBackgroundsBackgroundsParserRuleCall_5_4_0() { return cBackgroundsBackgroundsParserRuleCall_5_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class FieldSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FieldSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsXAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cWriteableAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cWriteableVarKeyword_1_0_0 = (Keyword)cWriteableAssignment_1_0.eContents().get(0);
		private final Keyword cValKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cExtensionAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final Keyword cExtensionExtensionKeyword_2_0_0_0 = (Keyword)cExtensionAssignment_2_0_0.eContents().get(0);
		private final Assignment cTypeAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0_1_0 = (RuleCall)cTypeAssignment_2_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRightAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRightXExpressionParserRuleCall_4_1_0 = (RuleCall)cRightAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//FieldSpecification:
		//	annotations+=XAnnotation* (writeable?='var' | 'val') (extension?='extension' type=JvmTypeReference
		//	| type=JvmTypeReference?) name=ValidID ('=' right=XExpression)? ';'?;
		@Override public ParserRule getRule() { return rule; }
		
		//annotations+=XAnnotation* (writeable?='var' | 'val') (extension?='extension' type=JvmTypeReference |
		//type=JvmTypeReference?) name=ValidID ('=' right=XExpression)? ';'?
		public Group getGroup() { return cGroup; }
		
		//annotations+=XAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }
		
		//XAnnotation
		public RuleCall getAnnotationsXAnnotationParserRuleCall_0_0() { return cAnnotationsXAnnotationParserRuleCall_0_0; }
		
		//writeable?='var' | 'val'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//writeable?='var'
		public Assignment getWriteableAssignment_1_0() { return cWriteableAssignment_1_0; }
		
		//'var'
		public Keyword getWriteableVarKeyword_1_0_0() { return cWriteableVarKeyword_1_0_0; }
		
		//'val'
		public Keyword getValKeyword_1_1() { return cValKeyword_1_1; }
		
		//extension?='extension' type=JvmTypeReference | type=JvmTypeReference?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//extension?='extension' type=JvmTypeReference
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//extension?='extension'
		public Assignment getExtensionAssignment_2_0_0() { return cExtensionAssignment_2_0_0; }
		
		//'extension'
		public Keyword getExtensionExtensionKeyword_2_0_0_0() { return cExtensionExtensionKeyword_2_0_0_0; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_2_0_1() { return cTypeAssignment_2_0_1; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0_1_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0_1_0; }
		
		//type=JvmTypeReference?
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_1_0() { return cTypeJvmTypeReferenceParserRuleCall_2_1_0; }
		
		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }
		
		//('=' right=XExpression)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_0() { return cEqualsSignKeyword_4_0; }
		
		//right=XExpression
		public Assignment getRightAssignment_4_1() { return cRightAssignment_4_1; }
		
		//XExpression
		public RuleCall getRightXExpressionParserRuleCall_4_1_0() { return cRightXExpressionParserRuleCall_4_1_0; }
		
		//';'?
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class TextsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Texts");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTextsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTextKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Texts:
		//	{Texts} 'text' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Texts} 'text' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{Texts}
		public Action getTextsAction_0() { return cTextsAction_0; }
		
		//'text'
		public Keyword getTextKeyword_1() { return cTextKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ImagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Images");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImagesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Images:
		//	{Images} 'image' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Images} 'image' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{Images}
		public Action getImagesAction_0() { return cImagesAction_0; }
		
		//'image'
		public Keyword getImageKeyword_1() { return cImageKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FontsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Fonts");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFontsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFontKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Fonts:
		//	{Fonts} 'font' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Fonts} 'font' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{Fonts}
		public Action getFontsAction_0() { return cFontsAction_0; }
		
		//'font'
		public Keyword getFontKeyword_1() { return cFontKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ForegroundsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Foregrounds");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cForegroundsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cForegroundKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Foregrounds:
		//	{Foregrounds} 'foreground' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Foregrounds} 'foreground' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{Foregrounds}
		public Action getForegroundsAction_0() { return cForegroundsAction_0; }
		
		//'foreground'
		public Keyword getForegroundKeyword_1() { return cForegroundKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class BackgroundsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Backgrounds");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBackgroundsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBackgroundKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Backgrounds:
		//	{Backgrounds} 'background' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Backgrounds} 'background' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{Backgrounds}
		public Action getBackgroundsAction_0() { return cBackgroundsAction_0; }
		
		//'background'
		public Keyword getBackgroundKeyword_1() { return cBackgroundKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class TableLabelProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.TableLabelProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableLabelProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTableLabelProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Assignment cFeatureTextsAssignment_5_0 = (Assignment)cUnorderedGroup_5.eContents().get(0);
		private final RuleCall cFeatureTextsFeatureTextsParserRuleCall_5_0_0 = (RuleCall)cFeatureTextsAssignment_5_0.eContents().get(0);
		private final Assignment cFeatureImagesAssignment_5_1 = (Assignment)cUnorderedGroup_5.eContents().get(1);
		private final RuleCall cFeatureImagesFeatureImagesParserRuleCall_5_1_0 = (RuleCall)cFeatureImagesAssignment_5_1.eContents().get(0);
		private final Assignment cFeatureFontsAssignment_5_2 = (Assignment)cUnorderedGroup_5.eContents().get(2);
		private final RuleCall cFeatureFontsFeatureFontsParserRuleCall_5_2_0 = (RuleCall)cFeatureFontsAssignment_5_2.eContents().get(0);
		private final Assignment cFeatureForegroundsAssignment_5_3 = (Assignment)cUnorderedGroup_5.eContents().get(3);
		private final RuleCall cFeatureForegroundsFeatureForegroundsParserRuleCall_5_3_0 = (RuleCall)cFeatureForegroundsAssignment_5_3.eContents().get(0);
		private final Assignment cFeatureBackgroundsAssignment_5_4 = (Assignment)cUnorderedGroup_5.eContents().get(4);
		private final RuleCall cFeatureBackgroundsFeatureBackgroundsParserRuleCall_5_4_0 = (RuleCall)cFeatureBackgroundsAssignment_5_4.eContents().get(0);
		private final Assignment cRowFontsAssignment_5_5 = (Assignment)cUnorderedGroup_5.eContents().get(5);
		private final RuleCall cRowFontsRowFontsParserRuleCall_5_5_0 = (RuleCall)cRowFontsAssignment_5_5.eContents().get(0);
		private final Assignment cRowForegroundsAssignment_5_6 = (Assignment)cUnorderedGroup_5.eContents().get(6);
		private final RuleCall cRowForegroundsRowForegroundsParserRuleCall_5_6_0 = (RuleCall)cRowForegroundsAssignment_5_6.eContents().get(0);
		private final Assignment cRowBackgroundsAssignment_5_7 = (Assignment)cUnorderedGroup_5.eContents().get(7);
		private final RuleCall cRowBackgroundsRowBackgroundsParserRuleCall_5_7_0 = (RuleCall)cRowBackgroundsAssignment_5_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//TableLabelProvider:
		//	{TableLabelProvider} 'tableLabelProvider' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification* (featureTexts=FeatureTexts?
		//	& featureImages=FeatureImages?
		//	& featureFonts=FeatureFonts?
		//	& featureForegrounds=FeatureForegrounds?
		//	& featureBackgrounds=FeatureBackgrounds?
		//	& rowFonts=RowFonts?
		//	& rowForegrounds=RowForegrounds?
		//	& rowBackgrounds=RowBackgrounds?)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{TableLabelProvider} 'tableLabelProvider' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//(featureTexts=FeatureTexts? & featureImages=FeatureImages? & featureFonts=FeatureFonts? &
		//featureForegrounds=FeatureForegrounds? & featureBackgrounds=FeatureBackgrounds? & rowFonts=RowFonts? &
		//rowForegrounds=RowForegrounds? & rowBackgrounds=RowBackgrounds?) '}'
		public Group getGroup() { return cGroup; }
		
		//{TableLabelProvider}
		public Action getTableLabelProviderAction_0() { return cTableLabelProviderAction_0; }
		
		//'tableLabelProvider'
		public Keyword getTableLabelProviderKeyword_1() { return cTableLabelProviderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//featureTexts=FeatureTexts? & featureImages=FeatureImages? & featureFonts=FeatureFonts? &
		//featureForegrounds=FeatureForegrounds? & featureBackgrounds=FeatureBackgrounds? & rowFonts=RowFonts? &
		//rowForegrounds=RowForegrounds? & rowBackgrounds=RowBackgrounds?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//featureTexts=FeatureTexts?
		public Assignment getFeatureTextsAssignment_5_0() { return cFeatureTextsAssignment_5_0; }
		
		//FeatureTexts
		public RuleCall getFeatureTextsFeatureTextsParserRuleCall_5_0_0() { return cFeatureTextsFeatureTextsParserRuleCall_5_0_0; }
		
		//featureImages=FeatureImages?
		public Assignment getFeatureImagesAssignment_5_1() { return cFeatureImagesAssignment_5_1; }
		
		//FeatureImages
		public RuleCall getFeatureImagesFeatureImagesParserRuleCall_5_1_0() { return cFeatureImagesFeatureImagesParserRuleCall_5_1_0; }
		
		//featureFonts=FeatureFonts?
		public Assignment getFeatureFontsAssignment_5_2() { return cFeatureFontsAssignment_5_2; }
		
		//FeatureFonts
		public RuleCall getFeatureFontsFeatureFontsParserRuleCall_5_2_0() { return cFeatureFontsFeatureFontsParserRuleCall_5_2_0; }
		
		//featureForegrounds=FeatureForegrounds?
		public Assignment getFeatureForegroundsAssignment_5_3() { return cFeatureForegroundsAssignment_5_3; }
		
		//FeatureForegrounds
		public RuleCall getFeatureForegroundsFeatureForegroundsParserRuleCall_5_3_0() { return cFeatureForegroundsFeatureForegroundsParserRuleCall_5_3_0; }
		
		//featureBackgrounds=FeatureBackgrounds?
		public Assignment getFeatureBackgroundsAssignment_5_4() { return cFeatureBackgroundsAssignment_5_4; }
		
		//FeatureBackgrounds
		public RuleCall getFeatureBackgroundsFeatureBackgroundsParserRuleCall_5_4_0() { return cFeatureBackgroundsFeatureBackgroundsParserRuleCall_5_4_0; }
		
		//rowFonts=RowFonts?
		public Assignment getRowFontsAssignment_5_5() { return cRowFontsAssignment_5_5; }
		
		//RowFonts
		public RuleCall getRowFontsRowFontsParserRuleCall_5_5_0() { return cRowFontsRowFontsParserRuleCall_5_5_0; }
		
		//rowForegrounds=RowForegrounds?
		public Assignment getRowForegroundsAssignment_5_6() { return cRowForegroundsAssignment_5_6; }
		
		//RowForegrounds
		public RuleCall getRowForegroundsRowForegroundsParserRuleCall_5_6_0() { return cRowForegroundsRowForegroundsParserRuleCall_5_6_0; }
		
		//rowBackgrounds=RowBackgrounds?
		public Assignment getRowBackgroundsAssignment_5_7() { return cRowBackgroundsAssignment_5_7; }
		
		//RowBackgrounds
		public RuleCall getRowBackgroundsRowBackgroundsParserRuleCall_5_7_0() { return cRowBackgroundsRowBackgroundsParserRuleCall_5_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class PolymorphicSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.PolymorphicSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cParameterTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cParameterTypeJvmTypeReferenceParserRuleCall_0_0 = (RuleCall)cParameterTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionXExpressionParserRuleCall_3_0 = (RuleCall)cExpressionAssignment_3.eContents().get(0);
		
		//PolymorphicSpecification:
		//	parameterType=JvmTypeReference name=ValidID?
		//	'->'
		//	expression=XExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//parameterType=JvmTypeReference name=ValidID? '->' expression=XExpression
		public Group getGroup() { return cGroup; }
		
		//parameterType=JvmTypeReference
		public Assignment getParameterTypeAssignment_0() { return cParameterTypeAssignment_0; }
		
		//JvmTypeReference
		public RuleCall getParameterTypeJvmTypeReferenceParserRuleCall_0_0() { return cParameterTypeJvmTypeReferenceParserRuleCall_0_0; }
		
		//name=ValidID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }
		
		//expression=XExpression
		public Assignment getExpressionAssignment_3() { return cExpressionAssignment_3; }
		
		//XExpression
		public RuleCall getExpressionXExpressionParserRuleCall_3_0() { return cExpressionXExpressionParserRuleCall_3_0; }
	}
	public class FeatureCaptionProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureCaptionProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureCaptionProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFeatureCaptionProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final Assignment cFeatureTextsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeatureTextsFeatureTextsParserRuleCall_5_0 = (RuleCall)cFeatureTextsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FeatureCaptionProvider:
		//	{FeatureCaptionProvider} 'featureCaptionProvider' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification*
		//	featureTexts=FeatureTexts?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FeatureCaptionProvider} 'featureCaptionProvider' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//featureTexts=FeatureTexts? '}'
		public Group getGroup() { return cGroup; }
		
		//{FeatureCaptionProvider}
		public Action getFeatureCaptionProviderAction_0() { return cFeatureCaptionProviderAction_0; }
		
		//'featureCaptionProvider'
		public Keyword getFeatureCaptionProviderKeyword_1() { return cFeatureCaptionProviderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//featureTexts=FeatureTexts?
		public Assignment getFeatureTextsAssignment_5() { return cFeatureTextsAssignment_5; }
		
		//FeatureTexts
		public RuleCall getFeatureTextsFeatureTextsParserRuleCall_5_0() { return cFeatureTextsFeatureTextsParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class FormFeatureCaptionProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FormFeatureCaptionProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFormFeatureCaptionProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFormFeatureCaptionProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Assignment cFeatureTextsAssignment_5_0 = (Assignment)cUnorderedGroup_5.eContents().get(0);
		private final RuleCall cFeatureTextsFeatureTextsParserRuleCall_5_0_0 = (RuleCall)cFeatureTextsAssignment_5_0.eContents().get(0);
		private final Assignment cFeatureLabelsAssignment_5_1 = (Assignment)cUnorderedGroup_5.eContents().get(1);
		private final RuleCall cFeatureLabelsFeatureLabelsParserRuleCall_5_1_0 = (RuleCall)cFeatureLabelsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FormFeatureCaptionProvider:
		//	{FormFeatureCaptionProvider} 'formFeatureCaptionProvider' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification* (featureTexts=FeatureTexts?
		//	& featureLabels=FeatureLabels?)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FormFeatureCaptionProvider} 'formFeatureCaptionProvider' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//(featureTexts=FeatureTexts? & featureLabels=FeatureLabels?) '}'
		public Group getGroup() { return cGroup; }
		
		//{FormFeatureCaptionProvider}
		public Action getFormFeatureCaptionProviderAction_0() { return cFormFeatureCaptionProviderAction_0; }
		
		//'formFeatureCaptionProvider'
		public Keyword getFormFeatureCaptionProviderKeyword_1() { return cFormFeatureCaptionProviderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//featureTexts=FeatureTexts? & featureLabels=FeatureLabels?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//featureTexts=FeatureTexts?
		public Assignment getFeatureTextsAssignment_5_0() { return cFeatureTextsAssignment_5_0; }
		
		//FeatureTexts
		public RuleCall getFeatureTextsFeatureTextsParserRuleCall_5_0_0() { return cFeatureTextsFeatureTextsParserRuleCall_5_0_0; }
		
		//featureLabels=FeatureLabels?
		public Assignment getFeatureLabelsAssignment_5_1() { return cFeatureLabelsAssignment_5_1; }
		
		//FeatureLabels
		public RuleCall getFeatureLabelsFeatureLabelsParserRuleCall_5_1_0() { return cFeatureLabelsFeatureLabelsParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DialogFeatureCaptionProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.DialogFeatureCaptionProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDialogFeatureCaptionProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDialogFeatureCaptionProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Assignment cFeatureTextsAssignment_5_0 = (Assignment)cUnorderedGroup_5.eContents().get(0);
		private final RuleCall cFeatureTextsFeatureTextsParserRuleCall_5_0_0 = (RuleCall)cFeatureTextsAssignment_5_0.eContents().get(0);
		private final Assignment cFeatureLabelsAssignment_5_1 = (Assignment)cUnorderedGroup_5.eContents().get(1);
		private final RuleCall cFeatureLabelsFeatureLabelsParserRuleCall_5_1_0 = (RuleCall)cFeatureLabelsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DialogFeatureCaptionProvider:
		//	{DialogFeatureCaptionProvider} 'dialogFeatureCaptionProvider' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification* (featureTexts=FeatureTexts?
		//	& featureLabels=FeatureLabels?)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DialogFeatureCaptionProvider} 'dialogFeatureCaptionProvider' extendsClause=ExtendsClause? '{'
		//fields+=FieldSpecification* (featureTexts=FeatureTexts? & featureLabels=FeatureLabels?) '}'
		public Group getGroup() { return cGroup; }
		
		//{DialogFeatureCaptionProvider}
		public Action getDialogFeatureCaptionProviderAction_0() { return cDialogFeatureCaptionProviderAction_0; }
		
		//'dialogFeatureCaptionProvider'
		public Keyword getDialogFeatureCaptionProviderKeyword_1() { return cDialogFeatureCaptionProviderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//featureTexts=FeatureTexts? & featureLabels=FeatureLabels?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//featureTexts=FeatureTexts?
		public Assignment getFeatureTextsAssignment_5_0() { return cFeatureTextsAssignment_5_0; }
		
		//FeatureTexts
		public RuleCall getFeatureTextsFeatureTextsParserRuleCall_5_0_0() { return cFeatureTextsFeatureTextsParserRuleCall_5_0_0; }
		
		//featureLabels=FeatureLabels?
		public Assignment getFeatureLabelsAssignment_5_1() { return cFeatureLabelsAssignment_5_1; }
		
		//FeatureLabels
		public RuleCall getFeatureLabelsFeatureLabelsParserRuleCall_5_1_0() { return cFeatureLabelsFeatureLabelsParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class FeatureTextsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureTexts");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureTextsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTextKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FeatureTexts:
		//	{FeatureTexts} 'text' '{'
		//	specifications+=FeatureAssociatedExpression*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FeatureTexts} 'text' '{' specifications+=FeatureAssociatedExpression* '}'
		public Group getGroup() { return cGroup; }
		
		//{FeatureTexts}
		public Action getFeatureTextsAction_0() { return cFeatureTextsAction_0; }
		
		//'text'
		public Keyword getTextKeyword_1() { return cTextKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=FeatureAssociatedExpression*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//FeatureAssociatedExpression
		public RuleCall getSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0() { return cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FeatureImagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureImages");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureImagesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FeatureImages:
		//	{FeatureImages} 'image' '{'
		//	specifications+=FeatureAssociatedExpression*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FeatureImages} 'image' '{' specifications+=FeatureAssociatedExpression* '}'
		public Group getGroup() { return cGroup; }
		
		//{FeatureImages}
		public Action getFeatureImagesAction_0() { return cFeatureImagesAction_0; }
		
		//'image'
		public Keyword getImageKeyword_1() { return cImageKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=FeatureAssociatedExpression*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//FeatureAssociatedExpression
		public RuleCall getSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0() { return cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FeatureFontsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureFonts");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureFontsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFontKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FeatureFonts:
		//	{FeatureFonts} 'font' '{'
		//	specifications+=FeatureAssociatedExpression*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FeatureFonts} 'font' '{' specifications+=FeatureAssociatedExpression* '}'
		public Group getGroup() { return cGroup; }
		
		//{FeatureFonts}
		public Action getFeatureFontsAction_0() { return cFeatureFontsAction_0; }
		
		//'font'
		public Keyword getFontKeyword_1() { return cFontKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=FeatureAssociatedExpression*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//FeatureAssociatedExpression
		public RuleCall getSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0() { return cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FeatureForegroundsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureForegrounds");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureForegroundsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cForegroundKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FeatureForegrounds:
		//	{FeatureForegrounds} 'foreground' '{'
		//	specifications+=FeatureAssociatedExpression*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FeatureForegrounds} 'foreground' '{' specifications+=FeatureAssociatedExpression* '}'
		public Group getGroup() { return cGroup; }
		
		//{FeatureForegrounds}
		public Action getFeatureForegroundsAction_0() { return cFeatureForegroundsAction_0; }
		
		//'foreground'
		public Keyword getForegroundKeyword_1() { return cForegroundKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=FeatureAssociatedExpression*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//FeatureAssociatedExpression
		public RuleCall getSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0() { return cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FeatureBackgroundsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureBackgrounds");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureBackgroundsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBackgroundKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FeatureBackgrounds:
		//	{FeatureBackgrounds} 'background' '{'
		//	specifications+=FeatureAssociatedExpression*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FeatureBackgrounds} 'background' '{' specifications+=FeatureAssociatedExpression* '}'
		public Group getGroup() { return cGroup; }
		
		//{FeatureBackgrounds}
		public Action getFeatureBackgroundsAction_0() { return cFeatureBackgroundsAction_0; }
		
		//'background'
		public Keyword getBackgroundKeyword_1() { return cBackgroundKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=FeatureAssociatedExpression*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//FeatureAssociatedExpression
		public RuleCall getSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0() { return cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FeatureLabelsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureLabels");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureLabelsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLabelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FeatureLabels:
		//	{FeatureLabels} 'label' '{'
		//	specifications+=FeatureAssociatedExpression*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FeatureLabels} 'label' '{' specifications+=FeatureAssociatedExpression* '}'
		public Group getGroup() { return cGroup; }
		
		//{FeatureLabels}
		public Action getFeatureLabelsAction_0() { return cFeatureLabelsAction_0; }
		
		//'label'
		public Keyword getLabelKeyword_1() { return cLabelKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=FeatureAssociatedExpression*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//FeatureAssociatedExpression
		public RuleCall getSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0() { return cSpecificationsFeatureAssociatedExpressionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class WithFeatureAssociatedExpressionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.WithFeatureAssociatedExpressions");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFeatureTextsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureImagesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFeatureFontsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFeatureForegroundsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cFeatureBackgroundsParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cFeatureLabelsParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//WithFeatureAssociatedExpressions:
		//	FeatureTexts | FeatureImages | FeatureFonts | FeatureForegrounds | FeatureBackgrounds | FeatureLabels;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureTexts | FeatureImages | FeatureFonts | FeatureForegrounds | FeatureBackgrounds | FeatureLabels
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FeatureTexts
		public RuleCall getFeatureTextsParserRuleCall_0() { return cFeatureTextsParserRuleCall_0; }
		
		//FeatureImages
		public RuleCall getFeatureImagesParserRuleCall_1() { return cFeatureImagesParserRuleCall_1; }
		
		//FeatureFonts
		public RuleCall getFeatureFontsParserRuleCall_2() { return cFeatureFontsParserRuleCall_2; }
		
		//FeatureForegrounds
		public RuleCall getFeatureForegroundsParserRuleCall_3() { return cFeatureForegroundsParserRuleCall_3; }
		
		//FeatureBackgrounds
		public RuleCall getFeatureBackgroundsParserRuleCall_4() { return cFeatureBackgroundsParserRuleCall_4; }
		
		//FeatureLabels
		public RuleCall getFeatureLabelsParserRuleCall_5() { return cFeatureLabelsParserRuleCall_5; }
	}
	public class RowFontsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.RowFonts");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRowFontsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRowFontKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RowFonts:
		//	{RowFonts} 'rowFont' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RowFonts} 'rowFont' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{RowFonts}
		public Action getRowFontsAction_0() { return cRowFontsAction_0; }
		
		//'rowFont'
		public Keyword getRowFontKeyword_1() { return cRowFontKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RowForegroundsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.RowForegrounds");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRowForegroundsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRowForegroundKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RowForegrounds:
		//	{RowForegrounds} 'rowForeground' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RowForegrounds} 'rowForeground' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{RowForegrounds}
		public Action getRowForegroundsAction_0() { return cRowForegroundsAction_0; }
		
		//'rowForeground'
		public Keyword getRowForegroundKeyword_1() { return cRowForegroundKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RowBackgroundsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.RowBackgrounds");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRowBackgroundsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRowBackgroundKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RowBackgrounds:
		//	{RowBackgrounds} 'rowBackground' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RowBackgrounds} 'rowBackground' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{RowBackgrounds}
		public Action getRowBackgroundsAction_0() { return cRowBackgroundsAction_0; }
		
		//'rowBackground'
		public Keyword getRowBackgroundKeyword_1() { return cRowBackgroundKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class WithExpressionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.WithExpressions");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRowFontsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRowForegroundsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRowBackgroundsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMenusParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEmfMenusParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cConfiguratorResourceURIParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cConfiguratorEClassParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cContentProviderElementsParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cContentProviderChildrenParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cTextsParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cImagesParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cFontsParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cForegroundsParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cBackgroundsParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		
		//WithExpressions:
		//	RowFonts | RowForegrounds | RowBackgrounds | Menus | EmfMenus | ConfiguratorResourceURI | ConfiguratorEClass |
		//	ContentProviderElements | ContentProviderChildren | Texts | Images | Fonts | Foregrounds | Backgrounds;
		@Override public ParserRule getRule() { return rule; }
		
		//RowFonts | RowForegrounds | RowBackgrounds | Menus | EmfMenus | ConfiguratorResourceURI | ConfiguratorEClass |
		//ContentProviderElements | ContentProviderChildren | Texts | Images | Fonts | Foregrounds | Backgrounds
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RowFonts
		public RuleCall getRowFontsParserRuleCall_0() { return cRowFontsParserRuleCall_0; }
		
		//RowForegrounds
		public RuleCall getRowForegroundsParserRuleCall_1() { return cRowForegroundsParserRuleCall_1; }
		
		//RowBackgrounds
		public RuleCall getRowBackgroundsParserRuleCall_2() { return cRowBackgroundsParserRuleCall_2; }
		
		//Menus
		public RuleCall getMenusParserRuleCall_3() { return cMenusParserRuleCall_3; }
		
		//EmfMenus
		public RuleCall getEmfMenusParserRuleCall_4() { return cEmfMenusParserRuleCall_4; }
		
		//ConfiguratorResourceURI
		public RuleCall getConfiguratorResourceURIParserRuleCall_5() { return cConfiguratorResourceURIParserRuleCall_5; }
		
		//ConfiguratorEClass
		public RuleCall getConfiguratorEClassParserRuleCall_6() { return cConfiguratorEClassParserRuleCall_6; }
		
		//ContentProviderElements
		public RuleCall getContentProviderElementsParserRuleCall_7() { return cContentProviderElementsParserRuleCall_7; }
		
		//ContentProviderChildren
		public RuleCall getContentProviderChildrenParserRuleCall_8() { return cContentProviderChildrenParserRuleCall_8; }
		
		//Texts
		public RuleCall getTextsParserRuleCall_9() { return cTextsParserRuleCall_9; }
		
		//Images
		public RuleCall getImagesParserRuleCall_10() { return cImagesParserRuleCall_10; }
		
		//Fonts
		public RuleCall getFontsParserRuleCall_11() { return cFontsParserRuleCall_11; }
		
		//Foregrounds
		public RuleCall getForegroundsParserRuleCall_12() { return cForegroundsParserRuleCall_12; }
		
		//Backgrounds
		public RuleCall getBackgroundsParserRuleCall_13() { return cBackgroundsParserRuleCall_13; }
	}
	public class FeatureAssociatedExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureAssociatedExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cParameterTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cParameterTypeJvmTypeReferenceParserRuleCall_0_0 = (RuleCall)cParameterTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFeatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cFeatureJvmMemberCrossReference_2_0 = (CrossReference)cFeatureAssignment_2.eContents().get(0);
		private final RuleCall cFeatureJvmMemberIDTerminalRuleCall_2_0_1 = (RuleCall)cFeatureJvmMemberCrossReference_2_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cExpressionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cExpressionXExpressionParserRuleCall_4_0 = (RuleCall)cExpressionAssignment_4.eContents().get(0);
		
		///**
		// * Specify an XExpression associated to an EStructuralFeature
		// * (actually we associated to the Java get method in the generated code, which
		// * corresponds to the original EStructuralFeature).
		// */ FeatureAssociatedExpression:
		//	parameterType=JvmTypeReference ':' feature=[types::JvmMember]
		//	'->'
		//	expression=XExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//parameterType=JvmTypeReference ':' feature=[types::JvmMember] '->' expression=XExpression
		public Group getGroup() { return cGroup; }
		
		//parameterType=JvmTypeReference
		public Assignment getParameterTypeAssignment_0() { return cParameterTypeAssignment_0; }
		
		//JvmTypeReference
		public RuleCall getParameterTypeJvmTypeReferenceParserRuleCall_0_0() { return cParameterTypeJvmTypeReferenceParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//feature=[types::JvmMember]
		public Assignment getFeatureAssignment_2() { return cFeatureAssignment_2; }
		
		//[types::JvmMember]
		public CrossReference getFeatureJvmMemberCrossReference_2_0() { return cFeatureJvmMemberCrossReference_2_0; }
		
		//ID
		public RuleCall getFeatureJvmMemberIDTerminalRuleCall_2_0_1() { return cFeatureJvmMemberIDTerminalRuleCall_2_0_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }
		
		//expression=XExpression
		public Assignment getExpressionAssignment_4() { return cExpressionAssignment_4; }
		
		//XExpression
		public RuleCall getExpressionXExpressionParserRuleCall_4_0() { return cExpressionXExpressionParserRuleCall_4_0; }
	}
	public class FeaturesProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeaturesProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeaturesProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFeaturesProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesFeatureSpecificationsParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FeaturesProvider:
		//	{FeaturesProvider} 'featuresProvider' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification*
		//	features=FeatureSpecifications?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FeaturesProvider} 'featuresProvider' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//features=FeatureSpecifications? '}'
		public Group getGroup() { return cGroup; }
		
		//{FeaturesProvider}
		public Action getFeaturesProviderAction_0() { return cFeaturesProviderAction_0; }
		
		//'featuresProvider'
		public Keyword getFeaturesProviderKeyword_1() { return cFeaturesProviderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//features=FeatureSpecifications?
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }
		
		//FeatureSpecifications
		public RuleCall getFeaturesFeatureSpecificationsParserRuleCall_5_0() { return cFeaturesFeatureSpecificationsParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TableFeaturesProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.TableFeaturesProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableFeaturesProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTableFeaturesProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesFeatureSpecificationsParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//TableFeaturesProvider:
		//	{TableFeaturesProvider} 'tableFeaturesProvider' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification*
		//	features=FeatureSpecifications?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{TableFeaturesProvider} 'tableFeaturesProvider' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//features=FeatureSpecifications? '}'
		public Group getGroup() { return cGroup; }
		
		//{TableFeaturesProvider}
		public Action getTableFeaturesProviderAction_0() { return cTableFeaturesProviderAction_0; }
		
		//'tableFeaturesProvider'
		public Keyword getTableFeaturesProviderKeyword_1() { return cTableFeaturesProviderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//features=FeatureSpecifications?
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }
		
		//FeatureSpecifications
		public RuleCall getFeaturesFeatureSpecificationsParserRuleCall_5_0() { return cFeaturesFeatureSpecificationsParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class FeatureSpecificationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureSpecifications");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureSpecificationsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFeaturesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeatureSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeatureSpecificationsFeatureSpecificationParserRuleCall_3_0 = (RuleCall)cFeatureSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FeatureSpecifications:
		//	{FeatureSpecifications} 'features' '{'
		//	featureSpecifications+=FeatureSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FeatureSpecifications} 'features' '{' featureSpecifications+=FeatureSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{FeatureSpecifications}
		public Action getFeatureSpecificationsAction_0() { return cFeatureSpecificationsAction_0; }
		
		//'features'
		public Keyword getFeaturesKeyword_1() { return cFeaturesKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//featureSpecifications+=FeatureSpecification*
		public Assignment getFeatureSpecificationsAssignment_3() { return cFeatureSpecificationsAssignment_3; }
		
		//FeatureSpecification
		public RuleCall getFeatureSpecificationsFeatureSpecificationParserRuleCall_3_0() { return cFeatureSpecificationsFeatureSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FeatureSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FeatureSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cParameterTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cParameterTypeJvmTypeReferenceParserRuleCall_0_0 = (RuleCall)cParameterTypeAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFeaturesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cFeaturesJvmMemberCrossReference_2_0 = (CrossReference)cFeaturesAssignment_2.eContents().get(0);
		private final RuleCall cFeaturesJvmMemberIDTerminalRuleCall_2_0_1 = (RuleCall)cFeaturesJvmMemberCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFeaturesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cFeaturesJvmMemberCrossReference_3_1_0 = (CrossReference)cFeaturesAssignment_3_1.eContents().get(0);
		private final RuleCall cFeaturesJvmMemberIDTerminalRuleCall_3_1_0_1 = (RuleCall)cFeaturesJvmMemberCrossReference_3_1_0.eContents().get(1);
		
		//FeatureSpecification:
		//	parameterType=JvmTypeReference
		//	'->'
		//	features+=[types::JvmMember] (',' features+=[types::JvmMember])*;
		@Override public ParserRule getRule() { return rule; }
		
		//parameterType=JvmTypeReference '->' features+=[types::JvmMember] (',' features+=[types::JvmMember])*
		public Group getGroup() { return cGroup; }
		
		//parameterType=JvmTypeReference
		public Assignment getParameterTypeAssignment_0() { return cParameterTypeAssignment_0; }
		
		//JvmTypeReference
		public RuleCall getParameterTypeJvmTypeReferenceParserRuleCall_0_0() { return cParameterTypeJvmTypeReferenceParserRuleCall_0_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }
		
		//features+=[types::JvmMember]
		public Assignment getFeaturesAssignment_2() { return cFeaturesAssignment_2; }
		
		//[types::JvmMember]
		public CrossReference getFeaturesJvmMemberCrossReference_2_0() { return cFeaturesJvmMemberCrossReference_2_0; }
		
		//ID
		public RuleCall getFeaturesJvmMemberIDTerminalRuleCall_2_0_1() { return cFeaturesJvmMemberIDTerminalRuleCall_2_0_1; }
		
		//(',' features+=[types::JvmMember])*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//features+=[types::JvmMember]
		public Assignment getFeaturesAssignment_3_1() { return cFeaturesAssignment_3_1; }
		
		//[types::JvmMember]
		public CrossReference getFeaturesJvmMemberCrossReference_3_1_0() { return cFeaturesJvmMemberCrossReference_3_1_0; }
		
		//ID
		public RuleCall getFeaturesJvmMemberIDTerminalRuleCall_3_1_0_1() { return cFeaturesJvmMemberIDTerminalRuleCall_3_1_0_1; }
	}
	public class FormControlFactoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.FormControlFactory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFormControlFactoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFormControlFactoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final Assignment cControlsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cControlsControlFactorySpecificationsParserRuleCall_5_0 = (RuleCall)cControlsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FormControlFactory:
		//	{FormControlFactory} 'formControlFactory' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification*
		//	controls=ControlFactorySpecifications?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FormControlFactory} 'formControlFactory' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//controls=ControlFactorySpecifications? '}'
		public Group getGroup() { return cGroup; }
		
		//{FormControlFactory}
		public Action getFormControlFactoryAction_0() { return cFormControlFactoryAction_0; }
		
		//'formControlFactory'
		public Keyword getFormControlFactoryKeyword_1() { return cFormControlFactoryKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//controls=ControlFactorySpecifications?
		public Assignment getControlsAssignment_5() { return cControlsAssignment_5; }
		
		//ControlFactorySpecifications
		public RuleCall getControlsControlFactorySpecificationsParserRuleCall_5_0() { return cControlsControlFactorySpecificationsParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DialogControlFactoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.DialogControlFactory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDialogControlFactoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDialogControlFactoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final Assignment cControlsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cControlsControlFactorySpecificationsParserRuleCall_5_0 = (RuleCall)cControlsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DialogControlFactory:
		//	{DialogControlFactory} 'dialogControlFactory' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification*
		//	controls=ControlFactorySpecifications?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DialogControlFactory} 'dialogControlFactory' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//controls=ControlFactorySpecifications? '}'
		public Group getGroup() { return cGroup; }
		
		//{DialogControlFactory}
		public Action getDialogControlFactoryAction_0() { return cDialogControlFactoryAction_0; }
		
		//'dialogControlFactory'
		public Keyword getDialogControlFactoryKeyword_1() { return cDialogControlFactoryKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//controls=ControlFactorySpecifications?
		public Assignment getControlsAssignment_5() { return cControlsAssignment_5; }
		
		//ControlFactorySpecifications
		public RuleCall getControlsControlFactorySpecificationsParserRuleCall_5_0() { return cControlsControlFactorySpecificationsParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ControlFactorySpecificationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ControlFactorySpecifications");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cControlFactorySpecificationsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cControlKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsControlFactorySpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ControlFactorySpecifications:
		//	{ControlFactorySpecifications} 'control' '{'
		//	specifications+=ControlFactorySpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ControlFactorySpecifications} 'control' '{' specifications+=ControlFactorySpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{ControlFactorySpecifications}
		public Action getControlFactorySpecificationsAction_0() { return cControlFactorySpecificationsAction_0; }
		
		//'control'
		public Keyword getControlKeyword_1() { return cControlKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=ControlFactorySpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//ControlFactorySpecification
		public RuleCall getSpecificationsControlFactorySpecificationParserRuleCall_3_0() { return cSpecificationsControlFactorySpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ControlFactorySpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ControlFactorySpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cParameterTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cParameterTypeJvmTypeReferenceParserRuleCall_0_0 = (RuleCall)cParameterTypeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFeatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cFeatureJvmMemberCrossReference_2_0 = (CrossReference)cFeatureAssignment_2.eContents().get(0);
		private final RuleCall cFeatureJvmMemberIDTerminalRuleCall_2_0_1 = (RuleCall)cFeatureJvmMemberCrossReference_2_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cExpressionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cExpressionXExpressionParserRuleCall_4_0 = (RuleCall)cExpressionAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTargetKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTargetAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTargetXExpressionParserRuleCall_5_1_0 = (RuleCall)cTargetAssignment_5_1.eContents().get(0);
		
		//ControlFactorySpecification:
		//	parameterType=JvmTypeReference ':' feature=[types::JvmMember]
		//	'->'
		//	expression=XExpression ('target' target=XExpression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//parameterType=JvmTypeReference ':' feature=[types::JvmMember] '->' expression=XExpression ('target' target=XExpression)?
		public Group getGroup() { return cGroup; }
		
		//parameterType=JvmTypeReference
		public Assignment getParameterTypeAssignment_0() { return cParameterTypeAssignment_0; }
		
		//JvmTypeReference
		public RuleCall getParameterTypeJvmTypeReferenceParserRuleCall_0_0() { return cParameterTypeJvmTypeReferenceParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//feature=[types::JvmMember]
		public Assignment getFeatureAssignment_2() { return cFeatureAssignment_2; }
		
		//[types::JvmMember]
		public CrossReference getFeatureJvmMemberCrossReference_2_0() { return cFeatureJvmMemberCrossReference_2_0; }
		
		//ID
		public RuleCall getFeatureJvmMemberIDTerminalRuleCall_2_0_1() { return cFeatureJvmMemberIDTerminalRuleCall_2_0_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }
		
		//expression=XExpression
		public Assignment getExpressionAssignment_4() { return cExpressionAssignment_4; }
		
		//XExpression
		public RuleCall getExpressionXExpressionParserRuleCall_4_0() { return cExpressionXExpressionParserRuleCall_4_0; }
		
		//('target' target=XExpression)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'target'
		public Keyword getTargetKeyword_5_0() { return cTargetKeyword_5_0; }
		
		//target=XExpression
		public Assignment getTargetAssignment_5_1() { return cTargetAssignment_5_1; }
		
		//XExpression
		public RuleCall getTargetXExpressionParserRuleCall_5_1_0() { return cTargetXExpressionParserRuleCall_5_1_0; }
	}
	public class ProposalCreatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ProposalCreator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProposalCreatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProposalsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final Assignment cProposalsSpecificationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cProposalsSpecificationsFeatureAssociatedExpressionParserRuleCall_5_0 = (RuleCall)cProposalsSpecificationsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ProposalCreator:
		//	{ProposalCreator} 'proposals' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification*
		//	proposalsSpecifications+=FeatureAssociatedExpression*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ProposalCreator} 'proposals' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//proposalsSpecifications+=FeatureAssociatedExpression* '}'
		public Group getGroup() { return cGroup; }
		
		//{ProposalCreator}
		public Action getProposalCreatorAction_0() { return cProposalCreatorAction_0; }
		
		//'proposals'
		public Keyword getProposalsKeyword_1() { return cProposalsKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//proposalsSpecifications+=FeatureAssociatedExpression*
		public Assignment getProposalsSpecificationsAssignment_5() { return cProposalsSpecificationsAssignment_5; }
		
		//FeatureAssociatedExpression
		public RuleCall getProposalsSpecificationsFeatureAssociatedExpressionParserRuleCall_5_0() { return cProposalsSpecificationsFeatureAssociatedExpressionParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MenuBuilderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.MenuBuilder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMenuBuilderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMenuBuilderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Assignment cMenusAssignment_5_0 = (Assignment)cUnorderedGroup_5.eContents().get(0);
		private final RuleCall cMenusMenusParserRuleCall_5_0_0 = (RuleCall)cMenusAssignment_5_0.eContents().get(0);
		private final Assignment cEmfMenusAssignment_5_1 = (Assignment)cUnorderedGroup_5.eContents().get(1);
		private final RuleCall cEmfMenusEmfMenusParserRuleCall_5_1_0 = (RuleCall)cEmfMenusAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MenuBuilder:
		//	{MenuBuilder} 'menuBuilder' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification* (menus=Menus?
		//	& emfMenus=EmfMenus?)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{MenuBuilder} 'menuBuilder' extendsClause=ExtendsClause? '{' fields+=FieldSpecification* (menus=Menus? &
		//emfMenus=EmfMenus?) '}'
		public Group getGroup() { return cGroup; }
		
		//{MenuBuilder}
		public Action getMenuBuilderAction_0() { return cMenuBuilderAction_0; }
		
		//'menuBuilder'
		public Keyword getMenuBuilderKeyword_1() { return cMenuBuilderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//menus=Menus? & emfMenus=EmfMenus?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//menus=Menus?
		public Assignment getMenusAssignment_5_0() { return cMenusAssignment_5_0; }
		
		//Menus
		public RuleCall getMenusMenusParserRuleCall_5_0_0() { return cMenusMenusParserRuleCall_5_0_0; }
		
		//emfMenus=EmfMenus?
		public Assignment getEmfMenusAssignment_5_1() { return cEmfMenusAssignment_5_1; }
		
		//EmfMenus
		public RuleCall getEmfMenusEmfMenusParserRuleCall_5_1_0() { return cEmfMenusEmfMenusParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MenusElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Menus");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMenusAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMenusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Menus:
		//	{Menus} 'menus' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Menus} 'menus' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{Menus}
		public Action getMenusAction_0() { return cMenusAction_0; }
		
		//'menus'
		public Keyword getMenusKeyword_1() { return cMenusKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EmfMenusElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.EmfMenus");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEmfMenusAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEmfMenusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//EmfMenus:
		//	{EmfMenus} 'emfMenus' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{EmfMenus} 'emfMenus' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{EmfMenus}
		public Action getEmfMenusAction_0() { return cEmfMenusAction_0; }
		
		//'emfMenus'
		public Keyword getEmfMenusKeyword_1() { return cEmfMenusKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ConfiguratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.Configurator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfiguratorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConfiguratorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Assignment cResourceURIAssignment_5_0 = (Assignment)cUnorderedGroup_5.eContents().get(0);
		private final RuleCall cResourceURIConfiguratorResourceURIParserRuleCall_5_0_0 = (RuleCall)cResourceURIAssignment_5_0.eContents().get(0);
		private final Assignment cEClassSpecAssignment_5_1 = (Assignment)cUnorderedGroup_5.eContents().get(1);
		private final RuleCall cEClassSpecConfiguratorEClassParserRuleCall_5_1_0 = (RuleCall)cEClassSpecAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Configurator:
		//	{Configurator} 'configurator' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification* (resourceURI=ConfiguratorResourceURI?
		//	& eClassSpec=ConfiguratorEClass?)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Configurator} 'configurator' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//(resourceURI=ConfiguratorResourceURI? & eClassSpec=ConfiguratorEClass?) '}'
		public Group getGroup() { return cGroup; }
		
		//{Configurator}
		public Action getConfiguratorAction_0() { return cConfiguratorAction_0; }
		
		//'configurator'
		public Keyword getConfiguratorKeyword_1() { return cConfiguratorKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//resourceURI=ConfiguratorResourceURI? & eClassSpec=ConfiguratorEClass?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//resourceURI=ConfiguratorResourceURI?
		public Assignment getResourceURIAssignment_5_0() { return cResourceURIAssignment_5_0; }
		
		//ConfiguratorResourceURI
		public RuleCall getResourceURIConfiguratorResourceURIParserRuleCall_5_0_0() { return cResourceURIConfiguratorResourceURIParserRuleCall_5_0_0; }
		
		//eClassSpec=ConfiguratorEClass?
		public Assignment getEClassSpecAssignment_5_1() { return cEClassSpecAssignment_5_1; }
		
		//ConfiguratorEClass
		public RuleCall getEClassSpecConfiguratorEClassParserRuleCall_5_1_0() { return cEClassSpecConfiguratorEClassParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ConfiguratorResourceURIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ConfiguratorResourceURI");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfiguratorResourceURIAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cResourceURIKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ConfiguratorResourceURI:
		//	{ConfiguratorResourceURI} 'resourceURI' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ConfiguratorResourceURI} 'resourceURI' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{ConfiguratorResourceURI}
		public Action getConfiguratorResourceURIAction_0() { return cConfiguratorResourceURIAction_0; }
		
		//'resourceURI'
		public Keyword getResourceURIKeyword_1() { return cResourceURIKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ConfiguratorEClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ConfiguratorEClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfiguratorEClassAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ConfiguratorEClass:
		//	{ConfiguratorEClass} 'eClass' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ConfiguratorEClass} 'eClass' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{ConfiguratorEClass}
		public Action getConfiguratorEClassAction_0() { return cConfiguratorEClassAction_0; }
		
		//'eClass'
		public Keyword getEClassKeyword_1() { return cEClassKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ViewerContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ViewerContentProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cViewerContentProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cViewerContentProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Assignment cElementsAssignment_5_0 = (Assignment)cUnorderedGroup_5.eContents().get(0);
		private final RuleCall cElementsContentProviderElementsParserRuleCall_5_0_0 = (RuleCall)cElementsAssignment_5_0.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1 = (Assignment)cUnorderedGroup_5.eContents().get(1);
		private final RuleCall cChildrenContentProviderChildrenParserRuleCall_5_1_0 = (RuleCall)cChildrenAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ViewerContentProvider:
		//	{ViewerContentProvider} 'viewerContentProvider' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification* (elements=ContentProviderElements?
		//	& children=ContentProviderChildren?)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ViewerContentProvider} 'viewerContentProvider' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//(elements=ContentProviderElements? & children=ContentProviderChildren?) '}'
		public Group getGroup() { return cGroup; }
		
		//{ViewerContentProvider}
		public Action getViewerContentProviderAction_0() { return cViewerContentProviderAction_0; }
		
		//'viewerContentProvider'
		public Keyword getViewerContentProviderKeyword_1() { return cViewerContentProviderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//elements=ContentProviderElements? & children=ContentProviderChildren?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//elements=ContentProviderElements?
		public Assignment getElementsAssignment_5_0() { return cElementsAssignment_5_0; }
		
		//ContentProviderElements
		public RuleCall getElementsContentProviderElementsParserRuleCall_5_0_0() { return cElementsContentProviderElementsParserRuleCall_5_0_0; }
		
		//children=ContentProviderChildren?
		public Assignment getChildrenAssignment_5_1() { return cChildrenAssignment_5_1; }
		
		//ContentProviderChildren
		public RuleCall getChildrenContentProviderChildrenParserRuleCall_5_1_0() { return cChildrenContentProviderChildrenParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TableViewerContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.TableViewerContentProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableViewerContentProviderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTableViewerContentProviderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final Assignment cElementsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cElementsContentProviderElementsParserRuleCall_5_0 = (RuleCall)cElementsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//TableViewerContentProvider:
		//	{TableViewerContentProvider} 'tableViewerContentProvider' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification*
		//	elements=ContentProviderElements?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{TableViewerContentProvider} 'tableViewerContentProvider' extendsClause=ExtendsClause? '{' fields+=FieldSpecification*
		//elements=ContentProviderElements? '}'
		public Group getGroup() { return cGroup; }
		
		//{TableViewerContentProvider}
		public Action getTableViewerContentProviderAction_0() { return cTableViewerContentProviderAction_0; }
		
		//'tableViewerContentProvider'
		public Keyword getTableViewerContentProviderKeyword_1() { return cTableViewerContentProviderKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//elements=ContentProviderElements?
		public Assignment getElementsAssignment_5() { return cElementsAssignment_5; }
		
		//ContentProviderElements
		public RuleCall getElementsContentProviderElementsParserRuleCall_5_0() { return cElementsContentProviderElementsParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ContentProviderChildrenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ContentProviderChildren");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContentProviderChildrenAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cChildrenKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ContentProviderChildren:
		//	{ContentProviderChildren} 'children' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ContentProviderChildren} 'children' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{ContentProviderChildren}
		public Action getContentProviderChildrenAction_0() { return cContentProviderChildrenAction_0; }
		
		//'children'
		public Keyword getChildrenKeyword_1() { return cChildrenKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ContentProviderElementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ContentProviderElements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContentProviderElementsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cElementsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsPolymorphicSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ContentProviderElements:
		//	{ContentProviderElements} 'elements' '{'
		//	specifications+=PolymorphicSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ContentProviderElements} 'elements' '{' specifications+=PolymorphicSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{ContentProviderElements}
		public Action getContentProviderElementsAction_0() { return cContentProviderElementsAction_0; }
		
		//'elements'
		public Keyword getElementsKeyword_1() { return cElementsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//specifications+=PolymorphicSpecification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//PolymorphicSpecification
		public RuleCall getSpecificationsPolymorphicSpecificationParserRuleCall_3_0() { return cSpecificationsPolymorphicSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ResourceManagerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ResourceManager");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResourceManagerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cResourceManagerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExtendsClauseAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsClauseExtendsClauseParserRuleCall_2_0 = (RuleCall)cExtendsClauseAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsFieldSpecificationParserRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cUnorderedGroup_5.eContents().get(0);
		private final Keyword cInitializeResourceKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Assignment cInitializeBodyAssignment_5_0_1 = (Assignment)cGroup_5_0.eContents().get(1);
		private final RuleCall cInitializeBodySimpleMethodSpecificationParserRuleCall_5_0_1_0 = (RuleCall)cInitializeBodyAssignment_5_0_1.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cUnorderedGroup_5.eContents().get(1);
		private final Keyword cSaveResourceKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cSaveBodyAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cSaveBodySimpleMethodSpecificationParserRuleCall_5_1_1_0 = (RuleCall)cSaveBodyAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ResourceManager:
		//	{ResourceManager} 'resourceManager' extendsClause=ExtendsClause? '{'
		//	fields+=FieldSpecification* (('initializeResource' initializeBody=SimpleMethodSpecification)?
		//	& ('saveResource' saveBody=SimpleMethodSpecification)?)
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ResourceManager} 'resourceManager' extendsClause=ExtendsClause? '{' fields+=FieldSpecification* (('initializeResource'
		//initializeBody=SimpleMethodSpecification)? & ('saveResource' saveBody=SimpleMethodSpecification)?) '}'
		public Group getGroup() { return cGroup; }
		
		//{ResourceManager}
		public Action getResourceManagerAction_0() { return cResourceManagerAction_0; }
		
		//'resourceManager'
		public Keyword getResourceManagerKeyword_1() { return cResourceManagerKeyword_1; }
		
		//extendsClause=ExtendsClause?
		public Assignment getExtendsClauseAssignment_2() { return cExtendsClauseAssignment_2; }
		
		//ExtendsClause
		public RuleCall getExtendsClauseExtendsClauseParserRuleCall_2_0() { return cExtendsClauseExtendsClauseParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=FieldSpecification*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//FieldSpecification
		public RuleCall getFieldsFieldSpecificationParserRuleCall_4_0() { return cFieldsFieldSpecificationParserRuleCall_4_0; }
		
		//('initializeResource' initializeBody=SimpleMethodSpecification)? & ('saveResource' saveBody=SimpleMethodSpecification)?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }
		
		//('initializeResource' initializeBody=SimpleMethodSpecification)?
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//'initializeResource'
		public Keyword getInitializeResourceKeyword_5_0_0() { return cInitializeResourceKeyword_5_0_0; }
		
		//initializeBody=SimpleMethodSpecification
		public Assignment getInitializeBodyAssignment_5_0_1() { return cInitializeBodyAssignment_5_0_1; }
		
		//SimpleMethodSpecification
		public RuleCall getInitializeBodySimpleMethodSpecificationParserRuleCall_5_0_1_0() { return cInitializeBodySimpleMethodSpecificationParserRuleCall_5_0_1_0; }
		
		//('saveResource' saveBody=SimpleMethodSpecification)?
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'saveResource'
		public Keyword getSaveResourceKeyword_5_1_0() { return cSaveResourceKeyword_5_1_0; }
		
		//saveBody=SimpleMethodSpecification
		public Assignment getSaveBodyAssignment_5_1_1() { return cSaveBodyAssignment_5_1_1; }
		
		//SimpleMethodSpecification
		public RuleCall getSaveBodySimpleMethodSpecificationParserRuleCall_5_1_1_0() { return cSaveBodySimpleMethodSpecificationParserRuleCall_5_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class SimpleMethodSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.SimpleMethodSpecification");
		private final Assignment cBodyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBodyXBlockExpressionParserRuleCall_0 = (RuleCall)cBodyAssignment.eContents().get(0);
		
		//SimpleMethodSpecification:
		//	body=XBlockExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//body=XBlockExpression
		public Assignment getBodyAssignment() { return cBodyAssignment; }
		
		//XBlockExpression
		public RuleCall getBodyXBlockExpressionParserRuleCall_0() { return cBodyXBlockExpressionParserRuleCall_0; }
	}
	public class EmfFeatureAccessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.EmfFeatureAccess");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFeatureAssociatedExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureSpecificationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cControlFactorySpecificationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//// a utility base class for rules which access features of an EClass
		//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
		//EmfFeatureAccess:
		//	FeatureAssociatedExpression | FeatureSpecification | ControlFactorySpecification;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureAssociatedExpression | FeatureSpecification | ControlFactorySpecification
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FeatureAssociatedExpression
		public RuleCall getFeatureAssociatedExpressionParserRuleCall_0() { return cFeatureAssociatedExpressionParserRuleCall_0; }
		
		//FeatureSpecification
		public RuleCall getFeatureSpecificationParserRuleCall_1() { return cFeatureSpecificationParserRuleCall_1; }
		
		//ControlFactorySpecification
		public RuleCall getControlFactorySpecificationParserRuleCall_2() { return cControlFactorySpecificationParserRuleCall_2; }
	}
	public class AbstractFeatureCaptionProviderWithLabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.AbstractFeatureCaptionProviderWithLabel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFormFeatureCaptionProviderParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDialogFeatureCaptionProviderParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
		//AbstractFeatureCaptionProviderWithLabel:
		//	FormFeatureCaptionProvider | DialogFeatureCaptionProvider;
		@Override public ParserRule getRule() { return rule; }
		
		//FormFeatureCaptionProvider | DialogFeatureCaptionProvider
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FormFeatureCaptionProvider
		public RuleCall getFormFeatureCaptionProviderParserRuleCall_0() { return cFormFeatureCaptionProviderParserRuleCall_0; }
		
		//DialogFeatureCaptionProvider
		public RuleCall getDialogFeatureCaptionProviderParserRuleCall_1() { return cDialogFeatureCaptionProviderParserRuleCall_1; }
	}
	public class AbstractFeatureProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.AbstractFeatureProvider");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFeaturesProviderParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTableFeaturesProviderParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
		//AbstractFeatureProvider:
		//	FeaturesProvider | TableFeaturesProvider;
		@Override public ParserRule getRule() { return rule; }
		
		//FeaturesProvider | TableFeaturesProvider
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FeaturesProvider
		public RuleCall getFeaturesProviderParserRuleCall_0() { return cFeaturesProviderParserRuleCall_0; }
		
		//TableFeaturesProvider
		public RuleCall getTableFeaturesProviderParserRuleCall_1() { return cTableFeaturesProviderParserRuleCall_1; }
	}
	public class AbstractControlFactoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.AbstractControlFactory");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFormControlFactoryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDialogControlFactoryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
		//AbstractControlFactory:
		//	FormControlFactory | DialogControlFactory;
		@Override public ParserRule getRule() { return rule; }
		
		//FormControlFactory | DialogControlFactory
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FormControlFactory
		public RuleCall getFormControlFactoryParserRuleCall_0() { return cFormControlFactoryParserRuleCall_0; }
		
		//DialogControlFactory
		public RuleCall getDialogControlFactoryParserRuleCall_1() { return cDialogControlFactoryParserRuleCall_1; }
	}
	public class WithExtendsClauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.WithExtendsClause");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cModuleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWithFieldsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// a utility base class for rules with 'extends' clause
		//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
		//WithExtendsClause:
		//	Module | WithFields;
		@Override public ParserRule getRule() { return rule; }
		
		//Module | WithFields
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Module
		public RuleCall getModuleParserRuleCall_0() { return cModuleParserRuleCall_0; }
		
		//WithFields
		public RuleCall getWithFieldsParserRuleCall_1() { return cWithFieldsParserRuleCall_1; }
	}
	public class WithFieldsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.WithFields");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLabelProviderParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTableLabelProviderParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFeatureCaptionProviderParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAbstractFeatureCaptionProviderWithLabelParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAbstractFeatureProviderParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAbstractControlFactoryParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cProposalCreatorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cViewerContentProviderParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cTableViewerContentProviderParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cMenuBuilderParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cConfiguratorParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cResourceManagerParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		
		//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
		//WithFields:
		//	LabelProvider | TableLabelProvider | FeatureCaptionProvider | AbstractFeatureCaptionProviderWithLabel |
		//	AbstractFeatureProvider | AbstractControlFactory | ProposalCreator | ViewerContentProvider |
		//	TableViewerContentProvider | MenuBuilder | Configurator | ResourceManager;
		@Override public ParserRule getRule() { return rule; }
		
		//LabelProvider | TableLabelProvider | FeatureCaptionProvider | AbstractFeatureCaptionProviderWithLabel |
		//AbstractFeatureProvider | AbstractControlFactory | ProposalCreator | ViewerContentProvider | TableViewerContentProvider
		//| MenuBuilder | Configurator | ResourceManager
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LabelProvider
		public RuleCall getLabelProviderParserRuleCall_0() { return cLabelProviderParserRuleCall_0; }
		
		//TableLabelProvider
		public RuleCall getTableLabelProviderParserRuleCall_1() { return cTableLabelProviderParserRuleCall_1; }
		
		//FeatureCaptionProvider
		public RuleCall getFeatureCaptionProviderParserRuleCall_2() { return cFeatureCaptionProviderParserRuleCall_2; }
		
		//AbstractFeatureCaptionProviderWithLabel
		public RuleCall getAbstractFeatureCaptionProviderWithLabelParserRuleCall_3() { return cAbstractFeatureCaptionProviderWithLabelParserRuleCall_3; }
		
		//AbstractFeatureProvider
		public RuleCall getAbstractFeatureProviderParserRuleCall_4() { return cAbstractFeatureProviderParserRuleCall_4; }
		
		//AbstractControlFactory
		public RuleCall getAbstractControlFactoryParserRuleCall_5() { return cAbstractControlFactoryParserRuleCall_5; }
		
		//ProposalCreator
		public RuleCall getProposalCreatorParserRuleCall_6() { return cProposalCreatorParserRuleCall_6; }
		
		//ViewerContentProvider
		public RuleCall getViewerContentProviderParserRuleCall_7() { return cViewerContentProviderParserRuleCall_7; }
		
		//TableViewerContentProvider
		public RuleCall getTableViewerContentProviderParserRuleCall_8() { return cTableViewerContentProviderParserRuleCall_8; }
		
		//MenuBuilder
		public RuleCall getMenuBuilderParserRuleCall_9() { return cMenuBuilderParserRuleCall_9; }
		
		//Configurator
		public RuleCall getConfiguratorParserRuleCall_10() { return cConfiguratorParserRuleCall_10; }
		
		//ResourceManager
		public RuleCall getResourceManagerParserRuleCall_11() { return cResourceManagerParserRuleCall_11; }
	}
	public class PartsSpecificationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.PartsSpecifications");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPartsSpecificationsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPartsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPartsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPartsPartSpecificationParserRuleCall_3_0 = (RuleCall)cPartsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PartsSpecifications:
		//	{PartsSpecifications} 'parts' '{'
		//	parts+=PartSpecification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{PartsSpecifications} 'parts' '{' parts+=PartSpecification* '}'
		public Group getGroup() { return cGroup; }
		
		//{PartsSpecifications}
		public Action getPartsSpecificationsAction_0() { return cPartsSpecificationsAction_0; }
		
		//'parts'
		public Keyword getPartsKeyword_1() { return cPartsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//parts+=PartSpecification*
		public Assignment getPartsAssignment_3() { return cPartsAssignment_3; }
		
		//PartSpecification
		public RuleCall getPartsPartSpecificationParserRuleCall_3_0() { return cPartsPartSpecificationParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PartSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.PartSpecification");
		private final RuleCall cViewSpecificationParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PartSpecification:
		//	ViewSpecification;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewSpecification
		public RuleCall getViewSpecificationParserRuleCall() { return cViewSpecificationParserRuleCall; }
	}
	public class ViewSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.emf.parsley.dsl.EmfParsleyDsl.ViewSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cViewSpecificationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cViewpartKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdQualifiedNameParserRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cViewnameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cViewNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cViewNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cViewNameAssignment_5.eContents().get(0);
		private final Keyword cViewclassKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_7_0 = (RuleCall)cTypeAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cViewcategoryKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cCategoryAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cCategoryQualifiedNameParserRuleCall_8_1_0 = (RuleCall)cCategoryAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ViewSpecification:
		//	{ViewSpecification} 'viewpart' id=QualifiedName '{'
		//	'viewname' viewName=STRING
		//	'viewclass' type=JvmTypeReference ('viewcategory' category=QualifiedName)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ViewSpecification} 'viewpart' id=QualifiedName '{' 'viewname' viewName=STRING 'viewclass' type=JvmTypeReference
		//('viewcategory' category=QualifiedName)? '}'
		public Group getGroup() { return cGroup; }
		
		//{ViewSpecification}
		public Action getViewSpecificationAction_0() { return cViewSpecificationAction_0; }
		
		//'viewpart'
		public Keyword getViewpartKeyword_1() { return cViewpartKeyword_1; }
		
		//id=QualifiedName
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//QualifiedName
		public RuleCall getIdQualifiedNameParserRuleCall_2_0() { return cIdQualifiedNameParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'viewname'
		public Keyword getViewnameKeyword_4() { return cViewnameKeyword_4; }
		
		//viewName=STRING
		public Assignment getViewNameAssignment_5() { return cViewNameAssignment_5; }
		
		//STRING
		public RuleCall getViewNameSTRINGTerminalRuleCall_5_0() { return cViewNameSTRINGTerminalRuleCall_5_0; }
		
		//'viewclass'
		public Keyword getViewclassKeyword_6() { return cViewclassKeyword_6; }
		
		//type=JvmTypeReference
		public Assignment getTypeAssignment_7() { return cTypeAssignment_7; }
		
		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_7_0() { return cTypeJvmTypeReferenceParserRuleCall_7_0; }
		
		//('viewcategory' category=QualifiedName)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'viewcategory'
		public Keyword getViewcategoryKeyword_8_0() { return cViewcategoryKeyword_8_0; }
		
		//category=QualifiedName
		public Assignment getCategoryAssignment_8_1() { return cCategoryAssignment_8_1; }
		
		//QualifiedName
		public RuleCall getCategoryQualifiedNameParserRuleCall_8_1_0() { return cCategoryQualifiedNameParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	
	
	private final ModelElements pModel;
	private final ModuleElements pModule;
	private final ExtendsClauseElements pExtendsClause;
	private final BindingsSpecificationElements pBindingsSpecification;
	private final BindingElements pBinding;
	private final LabelProviderElements pLabelProvider;
	private final FieldSpecificationElements pFieldSpecification;
	private final TextsElements pTexts;
	private final ImagesElements pImages;
	private final FontsElements pFonts;
	private final ForegroundsElements pForegrounds;
	private final BackgroundsElements pBackgrounds;
	private final TableLabelProviderElements pTableLabelProvider;
	private final PolymorphicSpecificationElements pPolymorphicSpecification;
	private final FeatureCaptionProviderElements pFeatureCaptionProvider;
	private final FormFeatureCaptionProviderElements pFormFeatureCaptionProvider;
	private final DialogFeatureCaptionProviderElements pDialogFeatureCaptionProvider;
	private final FeatureTextsElements pFeatureTexts;
	private final FeatureImagesElements pFeatureImages;
	private final FeatureFontsElements pFeatureFonts;
	private final FeatureForegroundsElements pFeatureForegrounds;
	private final FeatureBackgroundsElements pFeatureBackgrounds;
	private final FeatureLabelsElements pFeatureLabels;
	private final WithFeatureAssociatedExpressionsElements pWithFeatureAssociatedExpressions;
	private final RowFontsElements pRowFonts;
	private final RowForegroundsElements pRowForegrounds;
	private final RowBackgroundsElements pRowBackgrounds;
	private final WithExpressionsElements pWithExpressions;
	private final FeatureAssociatedExpressionElements pFeatureAssociatedExpression;
	private final FeaturesProviderElements pFeaturesProvider;
	private final TableFeaturesProviderElements pTableFeaturesProvider;
	private final FeatureSpecificationsElements pFeatureSpecifications;
	private final FeatureSpecificationElements pFeatureSpecification;
	private final FormControlFactoryElements pFormControlFactory;
	private final DialogControlFactoryElements pDialogControlFactory;
	private final ControlFactorySpecificationsElements pControlFactorySpecifications;
	private final ControlFactorySpecificationElements pControlFactorySpecification;
	private final ProposalCreatorElements pProposalCreator;
	private final MenuBuilderElements pMenuBuilder;
	private final MenusElements pMenus;
	private final EmfMenusElements pEmfMenus;
	private final ConfiguratorElements pConfigurator;
	private final ConfiguratorResourceURIElements pConfiguratorResourceURI;
	private final ConfiguratorEClassElements pConfiguratorEClass;
	private final ViewerContentProviderElements pViewerContentProvider;
	private final TableViewerContentProviderElements pTableViewerContentProvider;
	private final ContentProviderChildrenElements pContentProviderChildren;
	private final ContentProviderElementsElements pContentProviderElements;
	private final ResourceManagerElements pResourceManager;
	private final SimpleMethodSpecificationElements pSimpleMethodSpecification;
	private final EmfFeatureAccessElements pEmfFeatureAccess;
	private final AbstractFeatureCaptionProviderWithLabelElements pAbstractFeatureCaptionProviderWithLabel;
	private final AbstractFeatureProviderElements pAbstractFeatureProvider;
	private final AbstractControlFactoryElements pAbstractControlFactory;
	private final WithExtendsClauseElements pWithExtendsClause;
	private final WithFieldsElements pWithFields;
	private final PartsSpecificationsElements pPartsSpecifications;
	private final PartSpecificationElements pPartSpecification;
	private final ViewSpecificationElements pViewSpecification;
	
	private final Grammar grammar;
	
	private final XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations;
	
	private final XbaseGrammarAccess gaXbase;
	
	private final XtypeGrammarAccess gaXtype;

	@Inject
	public EmfParsleyDslGrammarAccess(GrammarProvider grammarProvider,
			XbaseWithAnnotationsGrammarAccess gaXbaseWithAnnotations,
			XbaseGrammarAccess gaXbase,
			XtypeGrammarAccess gaXtype) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbaseWithAnnotations = gaXbaseWithAnnotations;
		this.gaXbase = gaXbase;
		this.gaXtype = gaXtype;
		this.pModel = new ModelElements();
		this.pModule = new ModuleElements();
		this.pExtendsClause = new ExtendsClauseElements();
		this.pBindingsSpecification = new BindingsSpecificationElements();
		this.pBinding = new BindingElements();
		this.pLabelProvider = new LabelProviderElements();
		this.pFieldSpecification = new FieldSpecificationElements();
		this.pTexts = new TextsElements();
		this.pImages = new ImagesElements();
		this.pFonts = new FontsElements();
		this.pForegrounds = new ForegroundsElements();
		this.pBackgrounds = new BackgroundsElements();
		this.pTableLabelProvider = new TableLabelProviderElements();
		this.pPolymorphicSpecification = new PolymorphicSpecificationElements();
		this.pFeatureCaptionProvider = new FeatureCaptionProviderElements();
		this.pFormFeatureCaptionProvider = new FormFeatureCaptionProviderElements();
		this.pDialogFeatureCaptionProvider = new DialogFeatureCaptionProviderElements();
		this.pFeatureTexts = new FeatureTextsElements();
		this.pFeatureImages = new FeatureImagesElements();
		this.pFeatureFonts = new FeatureFontsElements();
		this.pFeatureForegrounds = new FeatureForegroundsElements();
		this.pFeatureBackgrounds = new FeatureBackgroundsElements();
		this.pFeatureLabels = new FeatureLabelsElements();
		this.pWithFeatureAssociatedExpressions = new WithFeatureAssociatedExpressionsElements();
		this.pRowFonts = new RowFontsElements();
		this.pRowForegrounds = new RowForegroundsElements();
		this.pRowBackgrounds = new RowBackgroundsElements();
		this.pWithExpressions = new WithExpressionsElements();
		this.pFeatureAssociatedExpression = new FeatureAssociatedExpressionElements();
		this.pFeaturesProvider = new FeaturesProviderElements();
		this.pTableFeaturesProvider = new TableFeaturesProviderElements();
		this.pFeatureSpecifications = new FeatureSpecificationsElements();
		this.pFeatureSpecification = new FeatureSpecificationElements();
		this.pFormControlFactory = new FormControlFactoryElements();
		this.pDialogControlFactory = new DialogControlFactoryElements();
		this.pControlFactorySpecifications = new ControlFactorySpecificationsElements();
		this.pControlFactorySpecification = new ControlFactorySpecificationElements();
		this.pProposalCreator = new ProposalCreatorElements();
		this.pMenuBuilder = new MenuBuilderElements();
		this.pMenus = new MenusElements();
		this.pEmfMenus = new EmfMenusElements();
		this.pConfigurator = new ConfiguratorElements();
		this.pConfiguratorResourceURI = new ConfiguratorResourceURIElements();
		this.pConfiguratorEClass = new ConfiguratorEClassElements();
		this.pViewerContentProvider = new ViewerContentProviderElements();
		this.pTableViewerContentProvider = new TableViewerContentProviderElements();
		this.pContentProviderChildren = new ContentProviderChildrenElements();
		this.pContentProviderElements = new ContentProviderElementsElements();
		this.pResourceManager = new ResourceManagerElements();
		this.pSimpleMethodSpecification = new SimpleMethodSpecificationElements();
		this.pEmfFeatureAccess = new EmfFeatureAccessElements();
		this.pAbstractFeatureCaptionProviderWithLabel = new AbstractFeatureCaptionProviderWithLabelElements();
		this.pAbstractFeatureProvider = new AbstractFeatureProviderElements();
		this.pAbstractControlFactory = new AbstractControlFactoryElements();
		this.pWithExtendsClause = new WithExtendsClauseElements();
		this.pWithFields = new WithFieldsElements();
		this.pPartsSpecifications = new PartsSpecificationsElements();
		this.pPartSpecification = new PartSpecificationElements();
		this.pViewSpecification = new ViewSpecificationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.eclipse.emf.parsley.dsl.EmfParsleyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public XbaseWithAnnotationsGrammarAccess getXbaseWithAnnotationsGrammarAccess() {
		return gaXbaseWithAnnotations;
	}
	
	public XbaseGrammarAccess getXbaseGrammarAccess() {
		return gaXbase;
	}
	
	public XtypeGrammarAccess getXtypeGrammarAccess() {
		return gaXtype;
	}

	
	//Model:
	//	importSection=XImportSection?
	//	module=Module;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//// if you add another element, please make sure that you update inheritance
	//// relations (see, e.g., WithExtendsClause rule) and also the
	//// label provider
	//Module:
	//	'module' name=QualifiedName extendsClause=ExtendsClause? '{' (bindingsSpecification=BindingsSpecification?
	//	& labelProvider=LabelProvider?
	//	& tableLabelProvider=TableLabelProvider?
	//	& featureCaptionProvider=FeatureCaptionProvider?
	//	& formFeatureCaptionProvider=FormFeatureCaptionProvider?
	//	& dialogFeatureCaptionProvider=DialogFeatureCaptionProvider?
	//	& featuresProvider=FeaturesProvider?
	//	& tableFeaturesProvider=TableFeaturesProvider?
	//	& formControlFactory=FormControlFactory?
	//	& dialogControlFactory=DialogControlFactory?
	//	& proposalCreator=ProposalCreator?
	//	& menuBuilder=MenuBuilder?
	//	& configurator=Configurator?
	//	& viewerContentProvider=ViewerContentProvider?
	//	& tableViewerContentProvider=TableViewerContentProvider?
	//	& partsSpecifications=PartsSpecifications?
	//	& resourceManager=ResourceManager?)
	//	'}';
	public ModuleElements getModuleAccess() {
		return pModule;
	}
	
	public ParserRule getModuleRule() {
		return getModuleAccess().getRule();
	}
	
	//ExtendsClause:
	//	'extends' superType=JvmTypeReference;
	public ExtendsClauseElements getExtendsClauseAccess() {
		return pExtendsClause;
	}
	
	public ParserRule getExtendsClauseRule() {
		return getExtendsClauseAccess().getRule();
	}
	
	//BindingsSpecification:
	//	{BindingsSpecification} 'bindings' '{'
	//	bindings+=Binding*
	//	'}';
	public BindingsSpecificationElements getBindingsSpecificationAccess() {
		return pBindingsSpecification;
	}
	
	public ParserRule getBindingsSpecificationRule() {
		return getBindingsSpecificationAccess().getRule();
	}
	
	//Binding:
	//	{TypeBinding} 'type' typeToBind=JvmTypeReference '->' to=XExpression | {ProviderBinding} 'provide'
	//	type=JvmTypeReference '->' to=XExpression | {ValueBinding} 'value' typeDecl=JvmTypeReference id=ValidID '->'
	//	to=XExpression;
	public BindingElements getBindingAccess() {
		return pBinding;
	}
	
	public ParserRule getBindingRule() {
		return getBindingAccess().getRule();
	}
	
	//LabelProvider:
	//	{LabelProvider} 'labelProvider' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification* (texts=Texts?
	//	& images=Images?
	//	& fonts=Fonts?
	//	& foregrounds=Foregrounds?
	//	& backgrounds=Backgrounds?)
	//	'}';
	public LabelProviderElements getLabelProviderAccess() {
		return pLabelProvider;
	}
	
	public ParserRule getLabelProviderRule() {
		return getLabelProviderAccess().getRule();
	}
	
	//FieldSpecification:
	//	annotations+=XAnnotation* (writeable?='var' | 'val') (extension?='extension' type=JvmTypeReference
	//	| type=JvmTypeReference?) name=ValidID ('=' right=XExpression)? ';'?;
	public FieldSpecificationElements getFieldSpecificationAccess() {
		return pFieldSpecification;
	}
	
	public ParserRule getFieldSpecificationRule() {
		return getFieldSpecificationAccess().getRule();
	}
	
	//Texts:
	//	{Texts} 'text' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public TextsElements getTextsAccess() {
		return pTexts;
	}
	
	public ParserRule getTextsRule() {
		return getTextsAccess().getRule();
	}
	
	//Images:
	//	{Images} 'image' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public ImagesElements getImagesAccess() {
		return pImages;
	}
	
	public ParserRule getImagesRule() {
		return getImagesAccess().getRule();
	}
	
	//Fonts:
	//	{Fonts} 'font' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public FontsElements getFontsAccess() {
		return pFonts;
	}
	
	public ParserRule getFontsRule() {
		return getFontsAccess().getRule();
	}
	
	//Foregrounds:
	//	{Foregrounds} 'foreground' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public ForegroundsElements getForegroundsAccess() {
		return pForegrounds;
	}
	
	public ParserRule getForegroundsRule() {
		return getForegroundsAccess().getRule();
	}
	
	//Backgrounds:
	//	{Backgrounds} 'background' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public BackgroundsElements getBackgroundsAccess() {
		return pBackgrounds;
	}
	
	public ParserRule getBackgroundsRule() {
		return getBackgroundsAccess().getRule();
	}
	
	//TableLabelProvider:
	//	{TableLabelProvider} 'tableLabelProvider' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification* (featureTexts=FeatureTexts?
	//	& featureImages=FeatureImages?
	//	& featureFonts=FeatureFonts?
	//	& featureForegrounds=FeatureForegrounds?
	//	& featureBackgrounds=FeatureBackgrounds?
	//	& rowFonts=RowFonts?
	//	& rowForegrounds=RowForegrounds?
	//	& rowBackgrounds=RowBackgrounds?)
	//	'}';
	public TableLabelProviderElements getTableLabelProviderAccess() {
		return pTableLabelProvider;
	}
	
	public ParserRule getTableLabelProviderRule() {
		return getTableLabelProviderAccess().getRule();
	}
	
	//PolymorphicSpecification:
	//	parameterType=JvmTypeReference name=ValidID?
	//	'->'
	//	expression=XExpression;
	public PolymorphicSpecificationElements getPolymorphicSpecificationAccess() {
		return pPolymorphicSpecification;
	}
	
	public ParserRule getPolymorphicSpecificationRule() {
		return getPolymorphicSpecificationAccess().getRule();
	}
	
	//FeatureCaptionProvider:
	//	{FeatureCaptionProvider} 'featureCaptionProvider' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification*
	//	featureTexts=FeatureTexts?
	//	'}';
	public FeatureCaptionProviderElements getFeatureCaptionProviderAccess() {
		return pFeatureCaptionProvider;
	}
	
	public ParserRule getFeatureCaptionProviderRule() {
		return getFeatureCaptionProviderAccess().getRule();
	}
	
	//FormFeatureCaptionProvider:
	//	{FormFeatureCaptionProvider} 'formFeatureCaptionProvider' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification* (featureTexts=FeatureTexts?
	//	& featureLabels=FeatureLabels?)
	//	'}';
	public FormFeatureCaptionProviderElements getFormFeatureCaptionProviderAccess() {
		return pFormFeatureCaptionProvider;
	}
	
	public ParserRule getFormFeatureCaptionProviderRule() {
		return getFormFeatureCaptionProviderAccess().getRule();
	}
	
	//DialogFeatureCaptionProvider:
	//	{DialogFeatureCaptionProvider} 'dialogFeatureCaptionProvider' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification* (featureTexts=FeatureTexts?
	//	& featureLabels=FeatureLabels?)
	//	'}';
	public DialogFeatureCaptionProviderElements getDialogFeatureCaptionProviderAccess() {
		return pDialogFeatureCaptionProvider;
	}
	
	public ParserRule getDialogFeatureCaptionProviderRule() {
		return getDialogFeatureCaptionProviderAccess().getRule();
	}
	
	//FeatureTexts:
	//	{FeatureTexts} 'text' '{'
	//	specifications+=FeatureAssociatedExpression*
	//	'}';
	public FeatureTextsElements getFeatureTextsAccess() {
		return pFeatureTexts;
	}
	
	public ParserRule getFeatureTextsRule() {
		return getFeatureTextsAccess().getRule();
	}
	
	//FeatureImages:
	//	{FeatureImages} 'image' '{'
	//	specifications+=FeatureAssociatedExpression*
	//	'}';
	public FeatureImagesElements getFeatureImagesAccess() {
		return pFeatureImages;
	}
	
	public ParserRule getFeatureImagesRule() {
		return getFeatureImagesAccess().getRule();
	}
	
	//FeatureFonts:
	//	{FeatureFonts} 'font' '{'
	//	specifications+=FeatureAssociatedExpression*
	//	'}';
	public FeatureFontsElements getFeatureFontsAccess() {
		return pFeatureFonts;
	}
	
	public ParserRule getFeatureFontsRule() {
		return getFeatureFontsAccess().getRule();
	}
	
	//FeatureForegrounds:
	//	{FeatureForegrounds} 'foreground' '{'
	//	specifications+=FeatureAssociatedExpression*
	//	'}';
	public FeatureForegroundsElements getFeatureForegroundsAccess() {
		return pFeatureForegrounds;
	}
	
	public ParserRule getFeatureForegroundsRule() {
		return getFeatureForegroundsAccess().getRule();
	}
	
	//FeatureBackgrounds:
	//	{FeatureBackgrounds} 'background' '{'
	//	specifications+=FeatureAssociatedExpression*
	//	'}';
	public FeatureBackgroundsElements getFeatureBackgroundsAccess() {
		return pFeatureBackgrounds;
	}
	
	public ParserRule getFeatureBackgroundsRule() {
		return getFeatureBackgroundsAccess().getRule();
	}
	
	//FeatureLabels:
	//	{FeatureLabels} 'label' '{'
	//	specifications+=FeatureAssociatedExpression*
	//	'}';
	public FeatureLabelsElements getFeatureLabelsAccess() {
		return pFeatureLabels;
	}
	
	public ParserRule getFeatureLabelsRule() {
		return getFeatureLabelsAccess().getRule();
	}
	
	//WithFeatureAssociatedExpressions:
	//	FeatureTexts | FeatureImages | FeatureFonts | FeatureForegrounds | FeatureBackgrounds | FeatureLabels;
	public WithFeatureAssociatedExpressionsElements getWithFeatureAssociatedExpressionsAccess() {
		return pWithFeatureAssociatedExpressions;
	}
	
	public ParserRule getWithFeatureAssociatedExpressionsRule() {
		return getWithFeatureAssociatedExpressionsAccess().getRule();
	}
	
	//RowFonts:
	//	{RowFonts} 'rowFont' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public RowFontsElements getRowFontsAccess() {
		return pRowFonts;
	}
	
	public ParserRule getRowFontsRule() {
		return getRowFontsAccess().getRule();
	}
	
	//RowForegrounds:
	//	{RowForegrounds} 'rowForeground' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public RowForegroundsElements getRowForegroundsAccess() {
		return pRowForegrounds;
	}
	
	public ParserRule getRowForegroundsRule() {
		return getRowForegroundsAccess().getRule();
	}
	
	//RowBackgrounds:
	//	{RowBackgrounds} 'rowBackground' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public RowBackgroundsElements getRowBackgroundsAccess() {
		return pRowBackgrounds;
	}
	
	public ParserRule getRowBackgroundsRule() {
		return getRowBackgroundsAccess().getRule();
	}
	
	//WithExpressions:
	//	RowFonts | RowForegrounds | RowBackgrounds | Menus | EmfMenus | ConfiguratorResourceURI | ConfiguratorEClass |
	//	ContentProviderElements | ContentProviderChildren | Texts | Images | Fonts | Foregrounds | Backgrounds;
	public WithExpressionsElements getWithExpressionsAccess() {
		return pWithExpressions;
	}
	
	public ParserRule getWithExpressionsRule() {
		return getWithExpressionsAccess().getRule();
	}
	
	///**
	// * Specify an XExpression associated to an EStructuralFeature
	// * (actually we associated to the Java get method in the generated code, which
	// * corresponds to the original EStructuralFeature).
	// */ FeatureAssociatedExpression:
	//	parameterType=JvmTypeReference ':' feature=[types::JvmMember]
	//	'->'
	//	expression=XExpression;
	public FeatureAssociatedExpressionElements getFeatureAssociatedExpressionAccess() {
		return pFeatureAssociatedExpression;
	}
	
	public ParserRule getFeatureAssociatedExpressionRule() {
		return getFeatureAssociatedExpressionAccess().getRule();
	}
	
	//FeaturesProvider:
	//	{FeaturesProvider} 'featuresProvider' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification*
	//	features=FeatureSpecifications?
	//	'}';
	public FeaturesProviderElements getFeaturesProviderAccess() {
		return pFeaturesProvider;
	}
	
	public ParserRule getFeaturesProviderRule() {
		return getFeaturesProviderAccess().getRule();
	}
	
	//TableFeaturesProvider:
	//	{TableFeaturesProvider} 'tableFeaturesProvider' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification*
	//	features=FeatureSpecifications?
	//	'}';
	public TableFeaturesProviderElements getTableFeaturesProviderAccess() {
		return pTableFeaturesProvider;
	}
	
	public ParserRule getTableFeaturesProviderRule() {
		return getTableFeaturesProviderAccess().getRule();
	}
	
	//FeatureSpecifications:
	//	{FeatureSpecifications} 'features' '{'
	//	featureSpecifications+=FeatureSpecification*
	//	'}';
	public FeatureSpecificationsElements getFeatureSpecificationsAccess() {
		return pFeatureSpecifications;
	}
	
	public ParserRule getFeatureSpecificationsRule() {
		return getFeatureSpecificationsAccess().getRule();
	}
	
	//FeatureSpecification:
	//	parameterType=JvmTypeReference
	//	'->'
	//	features+=[types::JvmMember] (',' features+=[types::JvmMember])*;
	public FeatureSpecificationElements getFeatureSpecificationAccess() {
		return pFeatureSpecification;
	}
	
	public ParserRule getFeatureSpecificationRule() {
		return getFeatureSpecificationAccess().getRule();
	}
	
	//FormControlFactory:
	//	{FormControlFactory} 'formControlFactory' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification*
	//	controls=ControlFactorySpecifications?
	//	'}';
	public FormControlFactoryElements getFormControlFactoryAccess() {
		return pFormControlFactory;
	}
	
	public ParserRule getFormControlFactoryRule() {
		return getFormControlFactoryAccess().getRule();
	}
	
	//DialogControlFactory:
	//	{DialogControlFactory} 'dialogControlFactory' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification*
	//	controls=ControlFactorySpecifications?
	//	'}';
	public DialogControlFactoryElements getDialogControlFactoryAccess() {
		return pDialogControlFactory;
	}
	
	public ParserRule getDialogControlFactoryRule() {
		return getDialogControlFactoryAccess().getRule();
	}
	
	//ControlFactorySpecifications:
	//	{ControlFactorySpecifications} 'control' '{'
	//	specifications+=ControlFactorySpecification*
	//	'}';
	public ControlFactorySpecificationsElements getControlFactorySpecificationsAccess() {
		return pControlFactorySpecifications;
	}
	
	public ParserRule getControlFactorySpecificationsRule() {
		return getControlFactorySpecificationsAccess().getRule();
	}
	
	//ControlFactorySpecification:
	//	parameterType=JvmTypeReference ':' feature=[types::JvmMember]
	//	'->'
	//	expression=XExpression ('target' target=XExpression)?;
	public ControlFactorySpecificationElements getControlFactorySpecificationAccess() {
		return pControlFactorySpecification;
	}
	
	public ParserRule getControlFactorySpecificationRule() {
		return getControlFactorySpecificationAccess().getRule();
	}
	
	//ProposalCreator:
	//	{ProposalCreator} 'proposals' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification*
	//	proposalsSpecifications+=FeatureAssociatedExpression*
	//	'}';
	public ProposalCreatorElements getProposalCreatorAccess() {
		return pProposalCreator;
	}
	
	public ParserRule getProposalCreatorRule() {
		return getProposalCreatorAccess().getRule();
	}
	
	//MenuBuilder:
	//	{MenuBuilder} 'menuBuilder' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification* (menus=Menus?
	//	& emfMenus=EmfMenus?)
	//	'}';
	public MenuBuilderElements getMenuBuilderAccess() {
		return pMenuBuilder;
	}
	
	public ParserRule getMenuBuilderRule() {
		return getMenuBuilderAccess().getRule();
	}
	
	//Menus:
	//	{Menus} 'menus' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public MenusElements getMenusAccess() {
		return pMenus;
	}
	
	public ParserRule getMenusRule() {
		return getMenusAccess().getRule();
	}
	
	//EmfMenus:
	//	{EmfMenus} 'emfMenus' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public EmfMenusElements getEmfMenusAccess() {
		return pEmfMenus;
	}
	
	public ParserRule getEmfMenusRule() {
		return getEmfMenusAccess().getRule();
	}
	
	//Configurator:
	//	{Configurator} 'configurator' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification* (resourceURI=ConfiguratorResourceURI?
	//	& eClassSpec=ConfiguratorEClass?)
	//	'}';
	public ConfiguratorElements getConfiguratorAccess() {
		return pConfigurator;
	}
	
	public ParserRule getConfiguratorRule() {
		return getConfiguratorAccess().getRule();
	}
	
	//ConfiguratorResourceURI:
	//	{ConfiguratorResourceURI} 'resourceURI' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public ConfiguratorResourceURIElements getConfiguratorResourceURIAccess() {
		return pConfiguratorResourceURI;
	}
	
	public ParserRule getConfiguratorResourceURIRule() {
		return getConfiguratorResourceURIAccess().getRule();
	}
	
	//ConfiguratorEClass:
	//	{ConfiguratorEClass} 'eClass' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public ConfiguratorEClassElements getConfiguratorEClassAccess() {
		return pConfiguratorEClass;
	}
	
	public ParserRule getConfiguratorEClassRule() {
		return getConfiguratorEClassAccess().getRule();
	}
	
	//ViewerContentProvider:
	//	{ViewerContentProvider} 'viewerContentProvider' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification* (elements=ContentProviderElements?
	//	& children=ContentProviderChildren?)
	//	'}';
	public ViewerContentProviderElements getViewerContentProviderAccess() {
		return pViewerContentProvider;
	}
	
	public ParserRule getViewerContentProviderRule() {
		return getViewerContentProviderAccess().getRule();
	}
	
	//TableViewerContentProvider:
	//	{TableViewerContentProvider} 'tableViewerContentProvider' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification*
	//	elements=ContentProviderElements?
	//	'}';
	public TableViewerContentProviderElements getTableViewerContentProviderAccess() {
		return pTableViewerContentProvider;
	}
	
	public ParserRule getTableViewerContentProviderRule() {
		return getTableViewerContentProviderAccess().getRule();
	}
	
	//ContentProviderChildren:
	//	{ContentProviderChildren} 'children' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public ContentProviderChildrenElements getContentProviderChildrenAccess() {
		return pContentProviderChildren;
	}
	
	public ParserRule getContentProviderChildrenRule() {
		return getContentProviderChildrenAccess().getRule();
	}
	
	//ContentProviderElements:
	//	{ContentProviderElements} 'elements' '{'
	//	specifications+=PolymorphicSpecification*
	//	'}';
	public ContentProviderElementsElements getContentProviderElementsAccess() {
		return pContentProviderElements;
	}
	
	public ParserRule getContentProviderElementsRule() {
		return getContentProviderElementsAccess().getRule();
	}
	
	//ResourceManager:
	//	{ResourceManager} 'resourceManager' extendsClause=ExtendsClause? '{'
	//	fields+=FieldSpecification* (('initializeResource' initializeBody=SimpleMethodSpecification)?
	//	& ('saveResource' saveBody=SimpleMethodSpecification)?)
	//	'}';
	public ResourceManagerElements getResourceManagerAccess() {
		return pResourceManager;
	}
	
	public ParserRule getResourceManagerRule() {
		return getResourceManagerAccess().getRule();
	}
	
	//SimpleMethodSpecification:
	//	body=XBlockExpression;
	public SimpleMethodSpecificationElements getSimpleMethodSpecificationAccess() {
		return pSimpleMethodSpecification;
	}
	
	public ParserRule getSimpleMethodSpecificationRule() {
		return getSimpleMethodSpecificationAccess().getRule();
	}
	
	//// a utility base class for rules which access features of an EClass
	//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
	//EmfFeatureAccess:
	//	FeatureAssociatedExpression | FeatureSpecification | ControlFactorySpecification;
	public EmfFeatureAccessElements getEmfFeatureAccessAccess() {
		return pEmfFeatureAccess;
	}
	
	public ParserRule getEmfFeatureAccessRule() {
		return getEmfFeatureAccessAccess().getRule();
	}
	
	//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
	//AbstractFeatureCaptionProviderWithLabel:
	//	FormFeatureCaptionProvider | DialogFeatureCaptionProvider;
	public AbstractFeatureCaptionProviderWithLabelElements getAbstractFeatureCaptionProviderWithLabelAccess() {
		return pAbstractFeatureCaptionProviderWithLabel;
	}
	
	public ParserRule getAbstractFeatureCaptionProviderWithLabelRule() {
		return getAbstractFeatureCaptionProviderWithLabelAccess().getRule();
	}
	
	//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
	//AbstractFeatureProvider:
	//	FeaturesProvider | TableFeaturesProvider;
	public AbstractFeatureProviderElements getAbstractFeatureProviderAccess() {
		return pAbstractFeatureProvider;
	}
	
	public ParserRule getAbstractFeatureProviderRule() {
		return getAbstractFeatureProviderAccess().getRule();
	}
	
	//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
	//AbstractControlFactory:
	//	FormControlFactory | DialogControlFactory;
	public AbstractControlFactoryElements getAbstractControlFactoryAccess() {
		return pAbstractControlFactory;
	}
	
	public ParserRule getAbstractControlFactoryRule() {
		return getAbstractControlFactoryAccess().getRule();
	}
	
	//// a utility base class for rules with 'extends' clause
	//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
	//WithExtendsClause:
	//	Module | WithFields;
	public WithExtendsClauseElements getWithExtendsClauseAccess() {
		return pWithExtendsClause;
	}
	
	public ParserRule getWithExtendsClauseRule() {
		return getWithExtendsClauseAccess().getRule();
	}
	
	//// IMPORTANT: update EmfParsleyDslExpectedSuperTypes if you add another element
	//WithFields:
	//	LabelProvider | TableLabelProvider | FeatureCaptionProvider | AbstractFeatureCaptionProviderWithLabel |
	//	AbstractFeatureProvider | AbstractControlFactory | ProposalCreator | ViewerContentProvider |
	//	TableViewerContentProvider | MenuBuilder | Configurator | ResourceManager;
	public WithFieldsElements getWithFieldsAccess() {
		return pWithFields;
	}
	
	public ParserRule getWithFieldsRule() {
		return getWithFieldsAccess().getRule();
	}
	
	//PartsSpecifications:
	//	{PartsSpecifications} 'parts' '{'
	//	parts+=PartSpecification*
	//	'}';
	public PartsSpecificationsElements getPartsSpecificationsAccess() {
		return pPartsSpecifications;
	}
	
	public ParserRule getPartsSpecificationsRule() {
		return getPartsSpecificationsAccess().getRule();
	}
	
	//PartSpecification:
	//	ViewSpecification;
	public PartSpecificationElements getPartSpecificationAccess() {
		return pPartSpecification;
	}
	
	public ParserRule getPartSpecificationRule() {
		return getPartSpecificationAccess().getRule();
	}
	
	//ViewSpecification:
	//	{ViewSpecification} 'viewpart' id=QualifiedName '{'
	//	'viewname' viewName=STRING
	//	'viewclass' type=JvmTypeReference ('viewcategory' category=QualifiedName)?
	//	'}';
	public ViewSpecificationElements getViewSpecificationAccess() {
		return pViewSpecification;
	}
	
	public ParserRule getViewSpecificationRule() {
		return getViewSpecificationAccess().getRule();
	}
	
	//XAnnotation:
	//	{XAnnotation}
	//	'@' annotationType=[types::JvmAnnotationType|QualifiedName] (=> '(' (elementValuePairs+=XAnnotationElementValuePair
	//	(',' elementValuePairs+=XAnnotationElementValuePair)*
	//	| value=XAnnotationElementValueOrCommaList)?
	//	')')?;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElements getXAnnotationAccess() {
		return gaXbaseWithAnnotations.getXAnnotationAccess();
	}
	
	public ParserRule getXAnnotationRule() {
		return getXAnnotationAccess().getRule();
	}
	
	//XAnnotationElementValuePair:
	//	=> (element=[types::JvmOperation|ValidID] '=') value=XAnnotationElementValue;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValuePairElements getXAnnotationElementValuePairAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValuePairAccess();
	}
	
	public ParserRule getXAnnotationElementValuePairRule() {
		return getXAnnotationElementValuePairAccess().getRule();
	}
	
	//XAnnotationElementValueOrCommaList xbase::XExpression:
	//	=> ({xbase::XListLiteral} '#' '[') (elements+=XAnnotationOrExpression (',' elements+=XAnnotationOrExpression)*)? ']'
	//	| XAnnotationOrExpression ({xbase::XListLiteral.elements+=current} (',' elements+=XAnnotationOrExpression)+)?;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueOrCommaListElements getXAnnotationElementValueOrCommaListAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueOrCommaListAccess();
	}
	
	public ParserRule getXAnnotationElementValueOrCommaListRule() {
		return getXAnnotationElementValueOrCommaListAccess().getRule();
	}
	
	//XAnnotationElementValue xbase::XExpression:
	//	=> ({xbase::XListLiteral} '#' '[') (elements+=XAnnotationOrExpression (',' elements+=XAnnotationOrExpression)*)? ']'
	//	| XAnnotationOrExpression;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueElements getXAnnotationElementValueAccess() {
		return gaXbaseWithAnnotations.getXAnnotationElementValueAccess();
	}
	
	public ParserRule getXAnnotationElementValueRule() {
		return getXAnnotationElementValueAccess().getRule();
	}
	
	//XAnnotationOrExpression xbase::XExpression:
	//	XAnnotation | XExpression;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationOrExpressionElements getXAnnotationOrExpressionAccess() {
		return gaXbaseWithAnnotations.getXAnnotationOrExpressionAccess();
	}
	
	public ParserRule getXAnnotationOrExpressionRule() {
		return getXAnnotationOrExpressionAccess().getRule();
	}
	
	//XExpression:
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbase.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}
	
	//XAssignment XExpression:
	//	{XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression
	//	(=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbase.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}
	
	//OpSingleAssign:
	//	'=';
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbase.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}
	
	//OpMultiAssign:
	//	'+=' | '-=' | '*=' | '/=' | '%=' |
	//	'<' '<' '=' |
	//	'>' '>'? '>=';
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbase.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}
	
	//XOrExpression XExpression:
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbase.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}
	
	//OpOr:
	//	'||';
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbase.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}
	
	//XAndExpression XExpression:
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbase.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}
	
	//OpAnd:
	//	'&&';
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbase.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}
	
	//XEqualityExpression XExpression:
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbase.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}
	
	//OpEquality:
	//	'==' | '!=' | '===' | '!==';
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbase.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}
	
	//XRelationalExpression XExpression:
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} 'instanceof') type=JvmTypeReference |
	//	=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbase.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}
	
	//OpCompare:
	//	'>=' | '<' '=' | '>' | '<';
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbase.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}
	
	//XOtherOperatorExpression XExpression:
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbase.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}
	
	//OpOther:
	//	'->'
	//	| '..<'
	//	| '>' '..'
	//	| '..'
	//	| '=>'
	//	| '>' (=> ('>' '>') | '>') | '<' (=> ('<' '<') | '<' | '=>') | '<>'
	//	| '?:';
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbase.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}
	
	//XAdditiveExpression XExpression:
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbase.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}
	
	//OpAdd:
	//	'+' | '-';
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbase.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}
	
	//XMultiplicativeExpression XExpression:
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbase.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}
	
	//OpMulti:
	//	'*' | '**' | '/' | '%';
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbase.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}
	
	//XUnaryOperation XExpression:
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation
	//	| XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaXbase.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}
	
	//OpUnary:
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbase.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}
	
	//XCastedExpression XExpression:
	//	XPostfixOperation (=> ({XCastedExpression.target=current} 'as') type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbase.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}
	
	//XPostfixOperation XExpression:
	//	XMemberFeatureCall => ({XPostfixOperation.operand=current} feature=[types::JvmIdentifiableElement|OpPostfix])?;
	public XbaseGrammarAccess.XPostfixOperationElements getXPostfixOperationAccess() {
		return gaXbase.getXPostfixOperationAccess();
	}
	
	public ParserRule getXPostfixOperationRule() {
		return getXPostfixOperationAccess().getRule();
	}
	
	//OpPostfix:
	//	"++" | "--";
	public XbaseGrammarAccess.OpPostfixElements getOpPostfixAccess() {
		return gaXbase.getOpPostfixAccess();
	}
	
	public ParserRule getOpPostfixRule() {
		return getOpPostfixAccess().getRule();
	}
	
	//XMemberFeatureCall XExpression:
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} ('.' | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment
	//	| => ({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." | explicitStatic?="::")) ('<'
	//	typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?='(' (memberCallArguments+=XShortClosure
	//	| memberCallArguments+=XExpression (',' memberCallArguments+=XExpression)*)?
	//	')')?
	//	memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbase.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}
	
	//XPrimaryExpression XExpression:
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XSynchronizedExpression | XFeatureCall | XLiteral |
	//	XIfExpression | XForLoopExpression | XBasicForLoopExpression | XWhileExpression | XDoWhileExpression |
	//	XThrowExpression | XReturnExpression | XTryCatchFinallyExpression | XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbase.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}
	
	//XLiteral XExpression:
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbase.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}
	
	//XCollectionLiteral:
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbase.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}
	
	//XSetLiteral:
	//	{XSetLiteral} '#' '{' (elements+=XExpression (',' elements+=XExpression)*)? '}';
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbase.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}
	
	//XListLiteral:
	//	{XListLiteral} '#' '[' (elements+=XExpression (',' elements+=XExpression)*)? ']';
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbase.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}
	
	//XClosure XExpression:
	//	=> ({XClosure}
	//	'[')
	//	=> ((declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?='|')?
	//	expression=XExpressionInClosure
	//	']';
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbase.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}
	
	//XExpressionInClosure XExpression:
	//	{XBlockExpression} (expressions+=XExpressionOrVarDeclaration ';'?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbase.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}
	
	//XShortClosure XExpression:
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter (',' declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?='|') expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbase.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}
	
	//XParenthesizedExpression XExpression:
	//	'(' XExpression ')';
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbase.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}
	
	//XIfExpression XExpression:
	//	{XIfExpression}
	//	'if' '(' if=XExpression ')'
	//	then=XExpression (=> 'else' else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbase.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}
	
	//XSwitchExpression XExpression:
	//	{XSwitchExpression}
	//	'switch' (=> ('(' declaredParam=JvmFormalParameter ':') switch=XExpression ')'
	//	| => (declaredParam=JvmFormalParameter ':')? switch=XExpression) '{'
	//	cases+=XCasePart* ('default' ':' default=XExpression)?
	//	'}';
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbase.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}
	
	//XCasePart:
	//	{XCasePart} typeGuard=JvmTypeReference? ('case' case=XExpression)? (':' then=XExpression | fallThrough?=',');
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbase.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}
	
	//XForLoopExpression XExpression:
	//	=> ({XForLoopExpression}
	//	'for' '(' declaredParam=JvmFormalParameter ':') forExpression=XExpression ')'
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbase.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}
	
	//XBasicForLoopExpression XExpression:
	//	{XBasicForLoopExpression}
	//	'for' '(' (initExpressions+=XExpressionOrVarDeclaration (',' initExpressions+=XExpressionOrVarDeclaration)*)? ';'
	//	expression=XExpression? ';' (updateExpressions+=XExpression (',' updateExpressions+=XExpression)*)? ')'
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XBasicForLoopExpressionElements getXBasicForLoopExpressionAccess() {
		return gaXbase.getXBasicForLoopExpressionAccess();
	}
	
	public ParserRule getXBasicForLoopExpressionRule() {
		return getXBasicForLoopExpressionAccess().getRule();
	}
	
	//XWhileExpression XExpression:
	//	{XWhileExpression}
	//	'while' '(' predicate=XExpression ')'
	//	body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbase.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}
	
	//XDoWhileExpression XExpression:
	//	{XDoWhileExpression}
	//	'do'
	//	body=XExpression
	//	'while' '(' predicate=XExpression ')';
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbase.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}
	
	//XBlockExpression XExpression:
	//	{XBlockExpression}
	//	'{' (expressions+=XExpressionOrVarDeclaration ';'?)*
	//	'}';
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbase.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}
	
	//XExpressionOrVarDeclaration XExpression:
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionOrVarDeclarationElements getXExpressionOrVarDeclarationAccess() {
		return gaXbase.getXExpressionOrVarDeclarationAccess();
	}
	
	public ParserRule getXExpressionOrVarDeclarationRule() {
		return getXExpressionOrVarDeclarationAccess().getRule();
	}
	
	//XVariableDeclaration XExpression:
	//	{XVariableDeclaration} (writeable?='var' | 'val') (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ('='
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbase.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}
	
	//JvmFormalParameter types::JvmFormalParameter:
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbase.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}
	
	//FullJvmFormalParameter types::JvmFormalParameter:
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbase.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}
	
	//XFeatureCall XExpression:
	//	{XFeatureCall} ('<' typeArguments+=JvmArgumentTypeReference (',' typeArguments+=JvmArgumentTypeReference)* '>')?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?='(' (featureCallArguments+=XShortClosure
	//	| featureCallArguments+=XExpression (',' featureCallArguments+=XExpression)*)?
	//	')')?
	//	featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbase.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}
	
	//FeatureCallID:
	//	ValidID | 'extends' | 'static' | 'import' | 'extension';
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbase.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}
	
	//IdOrSuper:
	//	FeatureCallID | 'super';
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbase.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}
	
	//XConstructorCall XExpression:
	//	{XConstructorCall}
	//	'new' constructor=[types::JvmConstructor|QualifiedName] (=> '<' typeArguments+=JvmArgumentTypeReference (','
	//	typeArguments+=JvmArgumentTypeReference)* '>')? (=> explicitConstructorCall?='(' (arguments+=XShortClosure
	//	| arguments+=XExpression (',' arguments+=XExpression)*)?
	//	')')?
	//	arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbase.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}
	
	//XBooleanLiteral XExpression:
	//	{XBooleanLiteral} ('false' | isTrue?='true');
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbase.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}
	
	//XNullLiteral XExpression:
	//	{XNullLiteral} 'null';
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbase.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}
	
	//XNumberLiteral XExpression:
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbase.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}
	
	//XStringLiteral XExpression:
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXbase.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}
	
	//XTypeLiteral XExpression:
	//	{XTypeLiteral} 'typeof' '(' type=[types::JvmType|QualifiedName] arrayDimensions+=ArrayBrackets* ')';
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbase.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}
	
	//XThrowExpression XExpression:
	//	{XThrowExpression} 'throw' expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbase.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}
	
	//XReturnExpression XExpression:
	//	{XReturnExpression} 'return' -> expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbase.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}
	
	//XTryCatchFinallyExpression XExpression:
	//	{XTryCatchFinallyExpression}
	//	'try'
	//	expression=XExpression (catchClauses+=XCatchClause+ (=> 'finally' finallyExpression=XExpression)?
	//	| 'finally' finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbase.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}
	
	//XSynchronizedExpression XExpression:
	//	=> ({XSynchronizedExpression}
	//	'synchronized' '(') param=XExpression ')' expression=XExpression;
	public XbaseGrammarAccess.XSynchronizedExpressionElements getXSynchronizedExpressionAccess() {
		return gaXbase.getXSynchronizedExpressionAccess();
	}
	
	public ParserRule getXSynchronizedExpressionRule() {
		return getXSynchronizedExpressionAccess().getRule();
	}
	
	//XCatchClause:
	//	=> 'catch' '(' declaredParam=FullJvmFormalParameter ')' expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbase.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}
	
	//QualifiedName:
	//	ValidID (=> '.' ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbase.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//Number hidden():
	//	HEX | (INT | DECIMAL) ('.' (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbase.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	///**
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes, 
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// */ StaticQualifier:
	//	(ValidID '::')+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbase.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}
	
	//terminal HEX:
	//	('0x' | '0X') ('0'..'9' | 'a'..'f' | 'A'..'F' | '_')+ ('#' (('b' | 'B') ('i' | 'I') | ('l' | 'L')))?;
	public TerminalRule getHEXRule() {
		return gaXbase.getHEXRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9' ('0'..'9' | '_')*;
	public TerminalRule getINTRule() {
		return gaXbase.getINTRule();
	}
	
	//terminal DECIMAL:
	//	INT (('e' | 'E') ('+' | '-')? INT)? (('b' | 'B') ('i' | 'I' | 'd' | 'D') | ('l' | 'L' | 'd' | 'D' | 'f' | 'F'))?;
	public TerminalRule getDECIMALRule() {
		return gaXbase.getDECIMALRule();
	}
	
	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)*
	//	| XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXtype.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}
	
	//ArrayBrackets:
	//	'[' ']';
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXtype.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}
	
	//XFunctionTypeRef:
	//	('(' (paramTypes+=JvmTypeReference (',' paramTypes+=JvmTypeReference)*)? ')')? '=>' returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXtype.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}
	
	//JvmParameterizedTypeReference:
	//	type=[JvmType|super::QualifiedName] (=> '<' arguments+=JvmArgumentTypeReference (','
	//	arguments+=JvmArgumentTypeReference)* '>' (=> ({JvmInnerTypeReference.outer=current} '.') type=[JvmType|ValidID] (=>
	//	'<' arguments+=JvmArgumentTypeReference (',' arguments+=JvmArgumentTypeReference)* '>')?)*)?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXtype.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}
	
	//JvmArgumentTypeReference JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXtype.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}
	
	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} '?' (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded*
	//	| constraints+=JvmLowerBound constraints+=JvmLowerBoundAnded*)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXtype.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}
	
	//JvmUpperBound:
	//	'extends' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXtype.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}
	
	//JvmUpperBoundAnded JvmUpperBound:
	//	'&' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXtype.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}
	
	//JvmLowerBound:
	//	'super' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXtype.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}
	
	//JvmLowerBoundAnded JvmLowerBound:
	//	'&' typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundAndedElements getJvmLowerBoundAndedAccess() {
		return gaXtype.getJvmLowerBoundAndedAccess();
	}
	
	public ParserRule getJvmLowerBoundAndedRule() {
		return getJvmLowerBoundAndedAccess().getRule();
	}
	
	//JvmTypeParameter:
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded*)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXtype.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}
	
	//QualifiedNameWithWildcard:
	//	super::QualifiedName '.' '*';
	public XtypeGrammarAccess.QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return gaXtype.getQualifiedNameWithWildcardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}
	
	//ValidID:
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXtype.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}
	
	//XImportSection:
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXtype.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}
	
	//XImportDeclaration:
	//	'import' (static?='static' extension?='extension'? importedType=[JvmDeclaredType|QualifiedNameInStaticImport]
	//	(wildcard?='*' | memberName=ValidID) | importedType=[JvmDeclaredType|super::QualifiedName] |
	//	importedNamespace=QualifiedNameWithWildcard) ';'?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXtype.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}
	
	//QualifiedNameInStaticImport:
	//	(ValidID '.')+;
	public XtypeGrammarAccess.QualifiedNameInStaticImportElements getQualifiedNameInStaticImportAccess() {
		return gaXtype.getQualifiedNameInStaticImportAccess();
	}
	
	public ParserRule getQualifiedNameInStaticImportRule() {
		return getQualifiedNameInStaticImportAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '$' | '_') ('a'..'z' | 'A'..'Z' | '$' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaXtype.getIDRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"'? |
	//	"'" ('\\' . | !('\\' | "'"))* "'"?;
	public TerminalRule getSTRINGRule() {
		return gaXtype.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaXtype.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXtype.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaXtype.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXtype.getANY_OTHERRule();
	}
}
