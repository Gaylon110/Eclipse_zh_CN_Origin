/*
* generated by Xtext
*/
package org.eclipse.gef.dot.internal.ui.language.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.gef.dot.internal.language.services.DotRectGrammarAccess;

public class DotRectParser extends AbstractContentAssistParser {
	
	@Inject
	private DotRectGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.gef.dot.internal.ui.language.contentassist.antlr.internal.InternalDotRectParser createParser() {
		org.eclipse.gef.dot.internal.ui.language.contentassist.antlr.internal.InternalDotRectParser result = new org.eclipse.gef.dot.internal.ui.language.contentassist.antlr.internal.InternalDotRectParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRectAccess().getGroup(), "rule__Rect__Group__0");
					put(grammarAccess.getRectAccess().getLlxAssignment_0(), "rule__Rect__LlxAssignment_0");
					put(grammarAccess.getRectAccess().getLlyAssignment_2(), "rule__Rect__LlyAssignment_2");
					put(grammarAccess.getRectAccess().getUrxAssignment_4(), "rule__Rect__UrxAssignment_4");
					put(grammarAccess.getRectAccess().getUryAssignment_6(), "rule__Rect__UryAssignment_6");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.gef.dot.internal.ui.language.contentassist.antlr.internal.InternalDotRectParser typedParser = (org.eclipse.gef.dot.internal.ui.language.contentassist.antlr.internal.InternalDotRectParser) parser;
			typedParser.entryRuleRect();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS" };
	}
	
	public DotRectGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DotRectGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
