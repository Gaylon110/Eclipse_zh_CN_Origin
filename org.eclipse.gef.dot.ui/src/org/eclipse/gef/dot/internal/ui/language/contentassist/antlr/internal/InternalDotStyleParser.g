/*
* generated by Xtext
*/
parser grammar InternalDotStyleParser;

options {
	tokenVocab=InternalDotStyleLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package org.eclipse.gef.dot.internal.ui.language.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.gef.dot.internal.language.services.DotStyleGrammarAccess;

}

@members {
 
 	private DotStyleGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Comma", "','");
 	}
 	
    public void setGrammarAccess(DotStyleGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleStyle
entryRuleStyle 
:
{ before(grammarAccess.getStyleRule()); }
	 ruleStyle
{ after(grammarAccess.getStyleRule()); } 
	 EOF 
;

// Rule Style
ruleStyle 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStyleAccess().getGroup()); }
(rule__Style__Group__0)
{ after(grammarAccess.getStyleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStyleItem
entryRuleStyleItem 
:
{ before(grammarAccess.getStyleItemRule()); }
	 ruleStyleItem
{ after(grammarAccess.getStyleItemRule()); } 
	 EOF 
;

// Rule StyleItem
ruleStyleItem 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStyleItemAccess().getGroup()); }
(rule__StyleItem__Group__0)
{ after(grammarAccess.getStyleItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Style__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group__0__Impl
	rule__Style__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getStyleAction_0()); }
(

)
{ after(grammarAccess.getStyleAccess().getStyleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Style__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getGroup_1()); }
(rule__Style__Group_1__0)?
{ after(grammarAccess.getStyleAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Style__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group_1__0__Impl
	rule__Style__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getStyleItemsAssignment_1_0()); }
(rule__Style__StyleItemsAssignment_1_0)
{ after(grammarAccess.getStyleAccess().getStyleItemsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Style__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getGroup_1_1()); }
(rule__Style__Group_1_1__0)*
{ after(grammarAccess.getStyleAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Style__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group_1_1__0__Impl
	rule__Style__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getCommaKeyword_1_1_0()); }

	Comma 

{ after(grammarAccess.getStyleAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Style__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Style__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getStyleItemsAssignment_1_1_1()); }
(rule__Style__StyleItemsAssignment_1_1_1)
{ after(grammarAccess.getStyleAccess().getStyleItemsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StyleItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleItem__Group__0__Impl
	rule__StyleItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getNameAssignment_0()); }
(rule__StyleItem__NameAssignment_0)
{ after(grammarAccess.getStyleItemAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StyleItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getGroup_1()); }
(rule__StyleItem__Group_1__0)?
{ after(grammarAccess.getStyleItemAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StyleItem__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleItem__Group_1__0__Impl
	rule__StyleItem__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getLeftParenthesisKeyword_1_0()); }

	LeftParenthesis 

{ after(grammarAccess.getStyleItemAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StyleItem__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleItem__Group_1__1__Impl
	rule__StyleItem__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getArgsAssignment_1_1()); }
(rule__StyleItem__ArgsAssignment_1_1)
{ after(grammarAccess.getStyleItemAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StyleItem__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleItem__Group_1__2__Impl
	rule__StyleItem__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getGroup_1_2()); }
(rule__StyleItem__Group_1_2__0)*
{ after(grammarAccess.getStyleItemAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StyleItem__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleItem__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getRightParenthesisKeyword_1_3()); }

	RightParenthesis 

{ after(grammarAccess.getStyleItemAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StyleItem__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleItem__Group_1_2__0__Impl
	rule__StyleItem__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getCommaKeyword_1_2_0()); }

	Comma 

{ after(grammarAccess.getStyleItemAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StyleItem__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleItem__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getArgsAssignment_1_2_1()); }
(rule__StyleItem__ArgsAssignment_1_2_1)
{ after(grammarAccess.getStyleItemAccess().getArgsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Style__StyleItemsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getStyleItemsStyleItemParserRuleCall_1_0_0()); }
	ruleStyleItem{ after(grammarAccess.getStyleAccess().getStyleItemsStyleItemParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Style__StyleItemsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleAccess().getStyleItemsStyleItemParserRuleCall_1_1_1_0()); }
	ruleStyleItem{ after(grammarAccess.getStyleAccess().getStyleItemsStyleItemParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getNameNAMETerminalRuleCall_0_0()); }
	RULE_NAME{ after(grammarAccess.getStyleItemAccess().getNameNAMETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getArgsNAMETerminalRuleCall_1_1_0()); }
	RULE_NAME{ after(grammarAccess.getStyleItemAccess().getArgsNAMETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StyleItem__ArgsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleItemAccess().getArgsNAMETerminalRuleCall_1_2_1_0()); }
	RULE_NAME{ after(grammarAccess.getStyleItemAccess().getArgsNAMETerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


