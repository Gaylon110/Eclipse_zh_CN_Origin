/*
* generated by Xtext
*/
grammar InternalDotStyle;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.gef.dot.internal.language.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.gef.dot.internal.language.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.gef.dot.internal.language.services.DotStyleGrammarAccess;

}

@parser::members {

 	private DotStyleGrammarAccess grammarAccess;
 	
    public InternalDotStyleParser(TokenStream input, DotStyleGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Style";	
   	}
   	
   	@Override
   	protected DotStyleGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleStyle
entryRuleStyle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStyleRule()); }
	 iv_ruleStyle=ruleStyle 
	 { $current=$iv_ruleStyle.current; } 
	 EOF 
;

// Rule Style
ruleStyle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStyleAccess().getStyleAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getStyleAccess().getStyleItemsStyleItemParserRuleCall_1_0_0()); 
	    }
		lv_styleItems_1_0=ruleStyleItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStyleRule());
	        }
       		add(
       			$current, 
       			"styleItems",
        		lv_styleItems_1_0, 
        		"StyleItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStyleAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStyleAccess().getStyleItemsStyleItemParserRuleCall_1_1_1_0()); 
	    }
		lv_styleItems_3_0=ruleStyleItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStyleRule());
	        }
       		add(
       			$current, 
       			"styleItems",
        		lv_styleItems_3_0, 
        		"StyleItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleStyleItem
entryRuleStyleItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStyleItemRule()); }
	 iv_ruleStyleItem=ruleStyleItem 
	 { $current=$iv_ruleStyleItem.current; } 
	 EOF 
;

// Rule StyleItem
ruleStyleItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_NAME
		{
			newLeafNode(lv_name_0_0, grammarAccess.getStyleItemAccess().getNameNAMETerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStyleItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"NAME");
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStyleItemAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		lv_args_2_0=RULE_NAME
		{
			newLeafNode(lv_args_2_0, grammarAccess.getStyleItemAccess().getArgsNAMETerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStyleItemRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"args",
        		lv_args_2_0, 
        		"NAME");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStyleItemAccess().getCommaKeyword_1_2_0());
    }
(
(
		lv_args_4_0=RULE_NAME
		{
			newLeafNode(lv_args_4_0, grammarAccess.getStyleItemAccess().getArgsNAMETerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStyleItemRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"args",
        		lv_args_4_0, 
        		"NAME");
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStyleItemAccess().getRightParenthesisKeyword_1_3());
    }
)?)
;









RULE_WS : (' '|'\t'|'\r'|'\n');

RULE_NAME : ~((RULE_WS|'('|')'|','))*;


